{"ast":null,"code":"import NativeReanimatedModule from \"./NativeReanimated\";\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from \"./PlatformChecker\";\nimport { makeShareableCloneRecursive, makeShareable as makeShareableUnwrapped } from \"./shareables\";\nimport { startMapper as startMapperUnwrapped } from \"./mappers\";\nimport { makeMutable as makeMutableUnwrapped, makeRemote as makeRemoteUnwrapped } from \"./mutables\";\nimport { initializeUIRuntime } from \"./initializers\";\nimport { SensorContainer } from \"./SensorContainer\";\nexport { stopMapper } from \"./mappers\";\nexport { runOnJS, runOnUI } from \"./threads\";\nvar _worklet_16556756009009_init_data = {\n  code: \"function anonymous() {}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\\\"],\\\"mappings\\\":\\\"AASoB,SAAAA,SAEpBA,CAAA\\\"}\"\n};\n\nvar testWorklet = function () {\n  var _e = [new global.Error(), 1, -27];\n\n  var _f = function _f() {};\n\n  _f._closure = {};\n  _f.__initData = _worklet_16556756009009_init_data;\n  _f.__workletHash = 16556756009009;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar throwUninitializedReanimatedException = function throwUninitializedReanimatedException() {\n  throw new Error(\"Failed to initialize react-native-reanimated library, make sure you followed installation steps here: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation/ \\n1) Make sure reanimated's babel plugin is installed in your babel.config.js (you should have 'react-native-reanimated/plugin' listed there - also see the above link for details) \\n2) Make sure you reset build cache after updating the config, run: yarn start --reset-cache\");\n};\n\nexport var checkPluginState = function checkPluginState() {\n  var throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n    if (throwError) {\n      throwUninitializedReanimatedException();\n    }\n\n    return false;\n  }\n\n  return true;\n};\nexport var isConfigured = function isConfigured() {\n  var throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return checkPluginState(throwError);\n};\nexport var isConfiguredCheck = function isConfiguredCheck() {\n  checkPluginState(true);\n};\nvar configurationCheckWrapper = __DEV__ ? function (fn) {\n  return function () {\n    isConfigured(true);\n    return fn.apply(void 0, arguments);\n  };\n} : function (fn) {\n  return fn;\n};\nexport var startMapper = __DEV__ ? configurationCheckWrapper(startMapperUnwrapped) : startMapperUnwrapped;\nexport var makeShareable = __DEV__ ? configurationCheckWrapper(makeShareableUnwrapped) : makeShareableUnwrapped;\nexport var makeMutable = __DEV__ ? configurationCheckWrapper(makeMutableUnwrapped) : makeMutableUnwrapped;\nexport var makeRemote = __DEV__ ? configurationCheckWrapper(makeRemoteUnwrapped) : makeRemoteUnwrapped;\nglobal._WORKLET = false;\n\nglobal._log = function (s) {\n  console.log(s);\n};\n\nexport function getViewProp(viewTag, propName) {\n  if (global._IS_FABRIC) {\n    throw new Error('[react-native-reanimated] `getViewProp` is not supported on Fabric yet');\n  }\n\n  return new Promise(function (resolve, reject) {\n    return NativeReanimatedModule.getViewProp(viewTag, propName, function (result) {\n      if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\nexport function getSensorContainer() {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n\n  return global.__sensorContainer;\n}\nvar _worklet_4585136441649_init_data = {\n  code: \"function handleAndFlushAnimationFrame(eventTimestamp, event) {\\n  const {\\n    eventHandler\\n  } = this._closure;\\n  global.__frameTimestamp = eventTimestamp;\\n  eventHandler(event);\\n  global.__flushAnimationFrame(eventTimestamp);\\n  global.__frameTimestamp = undefined;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"handleAndFlushAnimationFrame\\\",\\\"eventTimestamp\\\",\\\"event\\\",\\\"eventHandler\\\",\\\"_closure\\\",\\\"global\\\",\\\"__frameTimestamp\\\",\\\"__flushAnimationFrame\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\\\"],\\\"mappings\\\":\\\"AAmEE,SAAAA,4BAASA,CAA6BC,cAAA,EAAcC,KAAE,EAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGzDC,MAAM,CAACC,gBAAgB,GAAGL,cAAc;EACxCE,YAAY,CAACD,KAAK,CAAC;EACnBG,MAAM,CAACE,qBAAqB,CAACN,cAAc,CAAC;EAC5CI,MAAM,CAACC,gBAAgB,GAAGE,SAAS;AACrC\\\"}\"\n};\nexport function registerEventHandler(eventHash, eventHandler) {\n  var handleAndFlushAnimationFrame = function () {\n    var _e = [new global.Error(), -2, -27];\n\n    var _f = function _f(eventTimestamp, event) {\n      global.__frameTimestamp = eventTimestamp;\n      eventHandler(event);\n\n      global.__flushAnimationFrame(eventTimestamp);\n\n      global.__frameTimestamp = undefined;\n    };\n\n    _f._closure = {\n      eventHandler: eventHandler\n    };\n    _f.__initData = _worklet_4585136441649_init_data;\n    _f.__workletHash = 4585136441649;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n\n  return NativeReanimatedModule.registerEventHandler(eventHash, makeShareableCloneRecursive(handleAndFlushAnimationFrame));\n}\nexport function unregisterEventHandler(id) {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\nvar _worklet_13154374331073_init_data = {\n  code: \"function handleAndFlushAnimationFrame(state, height) {\\n  const {\\n    eventHandler\\n  } = this._closure;\\n  const now = performance.now();\\n  global.__frameTimestamp = now;\\n  eventHandler(state, height);\\n  global.__flushAnimationFrame(now);\\n  global.__frameTimestamp = undefined;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"handleAndFlushAnimationFrame\\\",\\\"state\\\",\\\"height\\\",\\\"eventHandler\\\",\\\"_closure\\\",\\\"now\\\",\\\"performance\\\",\\\"global\\\",\\\"__frameTimestamp\\\",\\\"__flushAnimationFrame\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\\\"],\\\"mappings\\\":\\\"AAiFE,SAAAA,6BAAAC,KAAA,EAAAC,MAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,MAAAC,GAAA,GAAAC,WAAA,CAAAD,GAAA;EACAE,MAAA,CAAAC,gBAAA,GAAAH,GAAA;EACAF,YAAS,CAAAF,KAAA,EAAAC,MAAA;EAGPK,MAAM,CAAAE,qBAAsB,CAACJ,GAAA;EAC7BE,MAAM,CAACC,gBAAgB,GAAGE,SAAG\\\"}\"\n};\nexport function subscribeForKeyboardEvents(eventHandler, options) {\n  var _options$isStatusBarT;\n\n  var handleAndFlushAnimationFrame = function () {\n    var _e = [new global.Error(), -2, -27];\n\n    var _f = function _f(state, height) {\n      var now = performance.now();\n      global.__frameTimestamp = now;\n      eventHandler(state, height);\n\n      global.__flushAnimationFrame(now);\n\n      global.__frameTimestamp = undefined;\n    };\n\n    _f._closure = {\n      eventHandler: eventHandler\n    };\n    _f.__initData = _worklet_13154374331073_init_data;\n    _f.__workletHash = 13154374331073;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n\n  return NativeReanimatedModule.subscribeForKeyboardEvents(makeShareableCloneRecursive(handleAndFlushAnimationFrame), (_options$isStatusBarT = options.isStatusBarTranslucentAndroid) != null ? _options$isStatusBarT : false);\n}\nexport function unsubscribeFromKeyboardEvents(listenerId) {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\nexport function registerSensor(sensorType, config, eventHandler) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(sensorType, config, makeShareableCloneRecursive(eventHandler));\n}\nexport function initializeSensor(sensorType, config) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\nexport function unregisterSensor(sensorId) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\nif (!isWeb() && isConfigured()) {\n  initializeUIRuntime();\n}\n\nvar featuresConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false\n};\nexport function enableLayoutAnimations(flag) {\n  var isCallByUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (!featuresConfig.setByUser && featuresConfig.enableLayoutAnimations !== flag) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\nexport function configureLayoutAnimations(viewTag, type, config) {\n  var sharedTransitionTag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  NativeReanimatedModule.configureLayoutAnimation(viewTag, type, sharedTransitionTag, makeShareableCloneRecursive(config));\n}\nexport function configureProps(uiProps, nativeProps) {\n  if (!nativeShouldBeMock()) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}","map":{"version":3,"sources":["core.ts"],"names":["NativeReanimatedModule","nativeShouldBeMock","shouldBeUseWeb","isWeb","makeShareableCloneRecursive","makeShareable","makeShareableUnwrapped","startMapper","startMapperUnwrapped","makeMutable","makeMutableUnwrapped","makeRemote","makeRemoteUnwrapped","initializeUIRuntime","SensorContainer","stopMapper","runOnJS","runOnUI","testWorklet","throwUninitializedReanimatedException","Error","checkPluginState","throwError","__workletHash","isConfigured","isConfiguredCheck","configurationCheckWrapper","__DEV__","fn","global","_WORKLET","_log","s","console","log","getViewProp","viewTag","propName","_IS_FABRIC","Promise","resolve","reject","result","substr","getSensorContainer","__sensorContainer","registerEventHandler","eventHash","eventHandler","handleAndFlushAnimationFrame","eventTimestamp","event","__frameTimestamp","__flushAnimationFrame","undefined","unregisterEventHandler","id","subscribeForKeyboardEvents","options","state","height","now","performance","isStatusBarTranslucentAndroid","unsubscribeFromKeyboardEvents","listenerId","registerSensor","sensorType","config","sensorContainer","initializeSensor","unregisterSensor","sensorId","featuresConfig","enableLayoutAnimations","setByUser","flag","isCallByUser","configureLayoutAnimations","type","sharedTransitionTag","configureLayoutAnimation","configureProps","uiProps","nativeProps"],"mappings":"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","sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from './PlatformChecker';\nimport {\n  AnimatedKeyboardOptions,\n  BasicWorkletFunction,\n  SensorConfig,\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport {\n  makeShareableCloneRecursive,\n  makeShareable as makeShareableUnwrapped,\n} from './shareables';\nimport { startMapper as startMapperUnwrapped } from './mappers';\nimport {\n  makeMutable as makeMutableUnwrapped,\n  makeRemote as makeRemoteUnwrapped,\n} from './mutables';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './layoutReanimation';\nimport { initializeUIRuntime } from './initializers';\nimport { SensorContainer } from './SensorContainer';\n\nexport { stopMapper } from './mappers';\nexport { runOnJS, runOnUI } from './threads';\n\nexport type ReanimatedConsole = Pick<\n  Console,\n  'debug' | 'log' | 'warn' | 'info' | 'error'\n>;\n\nconst testWorklet: BasicWorkletFunction<void> = () => {\n  'worklet';\n};\n\nconst throwUninitializedReanimatedException = () => {\n  throw new Error(\n    \"Failed to initialize react-native-reanimated library, make sure you followed installation steps here: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation/ \\n1) Make sure reanimated's babel plugin is installed in your babel.config.js (you should have 'react-native-reanimated/plugin' listed there - also see the above link for details) \\n2) Make sure you reset build cache after updating the config, run: yarn start --reset-cache\"\n  );\n};\n\nexport const checkPluginState: (throwError: boolean) => boolean = (\n  throwError = true\n) => {\n  if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n    if (throwError) {\n      throwUninitializedReanimatedException();\n    }\n    return false;\n  }\n  return true;\n};\n\nexport const isConfigured: (throwError?: boolean) => boolean = (\n  throwError = false\n) => {\n  return checkPluginState(throwError);\n};\n\nexport const isConfiguredCheck: () => void = () => {\n  checkPluginState(true);\n};\n\nconst configurationCheckWrapper = __DEV__\n  ? <T extends Array<any>, U>(fn: (...args: T) => U) => {\n      return (...args: T): U => {\n        isConfigured(true);\n        return fn(...args);\n      };\n    }\n  : <T extends Array<any>, U>(fn: (...args: T) => U) => fn;\n\nexport const startMapper = __DEV__\n  ? configurationCheckWrapper(startMapperUnwrapped)\n  : startMapperUnwrapped;\n\nexport const makeShareable = __DEV__\n  ? configurationCheckWrapper(makeShareableUnwrapped)\n  : makeShareableUnwrapped;\n\nexport const makeMutable = __DEV__\n  ? configurationCheckWrapper(makeMutableUnwrapped)\n  : makeMutableUnwrapped;\n\nexport const makeRemote = __DEV__\n  ? configurationCheckWrapper(makeRemoteUnwrapped)\n  : makeRemoteUnwrapped;\n\nglobal._WORKLET = false;\nglobal._log = function (s: string) {\n  console.log(s);\n};\n\nexport function getViewProp<T>(viewTag: string, propName: string): Promise<T> {\n  if (global._IS_FABRIC) {\n    throw new Error(\n      '[react-native-reanimated] `getViewProp` is not supported on Fabric yet'\n    );\n  }\n\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nexport function getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHash: string,\n  eventHandler: (event: T) => void\n): string {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.registerEventHandler(\n    eventHash,\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame)\n  );\n}\n\nexport function unregisterEventHandler(id: string): void {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = performance.now();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    options.isStatusBarTranslucentAndroid ?? false\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\n// initialize UI runtime if applicable\nif (!isWeb() && isConfigured()) {\n  initializeUIRuntime();\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimations(\n  viewTag: number,\n  type: LayoutAnimationType,\n  config: LayoutAnimationFunction | Keyframe,\n  sharedTransitionTag = ''\n): void {\n  NativeReanimatedModule.configureLayoutAnimation(\n    viewTag,\n    type,\n    sharedTransitionTag,\n    makeShareableCloneRecursive(config)\n  );\n}\n\nexport function configureProps(uiProps: string[], nativeProps: string[]): void {\n  if (!nativeShouldBeMock()) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}