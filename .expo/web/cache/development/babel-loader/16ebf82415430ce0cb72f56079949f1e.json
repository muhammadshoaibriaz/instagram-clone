{"ast":null,"code":"import findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { isChromeDebugger, isWeb, shouldBeUseWeb } from \"./PlatformChecker\";\nexport function getTag(view) {\n  return findNodeHandle(view);\n}\nvar isNative = !shouldBeUseWeb();\nexport var measure;\nvar _worklet_3190837654142_init_data = {\n  code: \"function anonymous(animatedRef) {\\n  if (!_WORKLET) {\\n    return null;\\n  }\\n  const viewTag = animatedRef();\\n  if (viewTag === -1) {\\n    console.warn(\\\"[Reanimated] The view with tag \\\" + viewTag + \\\" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");\\n    return null;\\n  }\\n  const measured = _measure(viewTag);\\n  if (measured === null) {\\n    console.warn(\\\"[Reanimated] The view with tag \\\" + viewTag + \\\" has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\\\");\\n    return null;\\n  } else if (measured.x === -1234567) {\\n    console.warn(\\\"[Reanimated] The view with tag \\\" + viewTag + \\\" returned an invalid measurement response.\\\");\\n    return null;\\n  } else if (isNaN(measured.x)) {\\n    console.warn(\\\"[Reanimated] The view with tag \\\" + viewTag + \\\" gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\\\");\\n    return null;\\n  } else {\\n    return measured;\\n  }\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"animatedRef\\\",\\\"_WORKLET\\\",\\\"viewTag\\\",\\\"console\\\",\\\"warn\\\",\\\"measured\\\",\\\"_measure\\\",\\\"x\\\",\\\"isNaN\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\\\"],\\\"mappings\\\":\\\"AA4BY,SAAAA,UAAAC,WAAe;EAGvB,IAAI,CAACC,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EACA,MAAMC,OAAO,GAAGF,WAAW,CAAC,CAAC;EAC7B,IAAIE,OAAO,KAAK,CAAC,CAAC,EAAE;IAClBC,OAAO,CAACC,IAAI,qCAAmCF,OAAQ,+JAA2J,CAAC;IACnN,OAAO,IAAI;EACb;EACA,MAAMG,QAAQ,GAAGC,QAAQ,CAACJ,OAAO,CAAC;EAClC,IAAIG,QAAQ,KAAK,IAAI,EAAE;IACrBF,OAAO,CAACC,IAAI,qCAAmCF,OAAQ,2MAAyM,CAAC;IACjQ,OAAO,IAAI;EACb,CAAC,MAAM,IAAIG,QAAQ,CAACE,CAAC,KAAK,CAAC,OAAO,EAAE;IAClCJ,OAAO,CAACC,IAAI,qCAAmCF,OAAQ,+CAA2C,CAAC;IACnG,OAAO,IAAI;EACb,CAAC,MAAM,IAAIM,KAAK,CAACH,QAAQ,CAACE,CAAC,CAAC,EAAE;IAC5BJ,OAAO,CAACC,IAAI,qCAAmCF,OAAQ,8GAA4G,CAAC;IACpK,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAOG,QAAQ;EACjB;AACF\\\"}\"\n};\n\nif (isWeb()) {\n  measure = function measure(animatedRef) {\n    var element = animatedRef();\n    var viewportOffset = element.getBoundingClientRect();\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      x: element.offsetLeft,\n      y: element.offsetTop,\n      pageX: viewportOffset.left,\n      pageY: viewportOffset.top\n    };\n  };\n} else if (isChromeDebugger()) {\n  measure = function measure(_animatedRef) {\n    console.warn('[Reanimated] measure() cannot be used with Chrome Debugger.');\n    return null;\n  };\n} else {\n  measure = function () {\n    var _e = [new global.Error(), 1, -27];\n\n    var _f = function _f(animatedRef) {\n      if (!_WORKLET) {\n        return null;\n      }\n\n      var viewTag = animatedRef();\n\n      if (viewTag === -1) {\n        console.warn(`[Reanimated] The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      }\n\n      var measured = _measure(viewTag);\n\n      if (measured === null) {\n        console.warn(`[Reanimated] The view with tag ${viewTag} has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`);\n        return null;\n      } else if (measured.x === -1234567) {\n        console.warn(`[Reanimated] The view with tag ${viewTag} returned an invalid measurement response.`);\n        return null;\n      } else if (isNaN(measured.x)) {\n        console.warn(`[Reanimated] The view with tag ${viewTag} gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`);\n        return null;\n      } else {\n        return measured;\n      }\n    };\n\n    _f._closure = {};\n    _f.__initData = _worklet_3190837654142_init_data;\n    _f.__workletHash = 3190837654142;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n}\n\nvar _worklet_4512985215126_init_data = {\n  code: \"function dispatchCommand(animatedRef, commandName, args) {\\n  const {\\n    isNative\\n  } = this._closure;\\n  if (!_WORKLET || !isNative) {\\n    return;\\n  }\\n  const shadowNodeWrapper = animatedRef();\\n  _dispatchCommand(shadowNodeWrapper, commandName, args);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"dispatchCommand\\\",\\\"animatedRef\\\",\\\"commandName\\\",\\\"args\\\",\\\"isNative\\\",\\\"_closure\\\",\\\"_WORKLET\\\",\\\"shadowNodeWrapper\\\",\\\"_dispatchCommand\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\\\"],\\\"mappings\\\":\\\"AAsDO,SAAAA,eAASA,CAAgBC,WAAA,EAAWC,WAAE,EAAWC,IAAE,EAAI;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG5D,IAAI,CAACC,QAAQ,IAAI,CAACF,QAAQ,EAAE;IAC1B;EACF;EAIA,MAAMG,iBAAiB,GAAGN,WAAW,CAAC,CAAC;EACvCO,gBAAgB,CAACD,iBAAiB,EAAEL,WAAW,EAAEC,IAAI,CAAC;AACxD\\\"}\"\n};\nexport var dispatchCommand = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(animatedRef, commandName, args) {\n    if (!_WORKLET || !isNative) {\n      return;\n    }\n\n    var shadowNodeWrapper = animatedRef();\n\n    _dispatchCommand(shadowNodeWrapper, commandName, args);\n  };\n\n  _f._closure = {\n    isNative: isNative\n  };\n  _f.__initData = _worklet_4512985215126_init_data;\n  _f.__workletHash = 4512985215126;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nexport var scrollTo;\nvar _worklet_17208598284085_init_data = {\n  code: \"function anonymous(animatedRef, x, y, animated) {\\n  const element = animatedRef();\\n  element.scrollTo({\\n    x: x,\\n    y: y,\\n    animated: animated\\n  });\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"animatedRef\\\",\\\"x\\\",\\\"y\\\",\\\"animated\\\",\\\"element\\\",\\\"scrollTo\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\\\"],\\\"mappings\\\":\\\"AAoEa,SAACA,UAAAC,WAAmB,EAAAC,CAAA,EAAAC,CAAA,EAAQC,QAAK;EAG1C,MAAMC,OAAO,GAAGJ,WAAW,CAAC,CAAC;EAE7BI,OAAO,CAACC,QAAQ,CAAC;IACfJ,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,QAAA,EAAAA;EACF,CAAC,CAAC;AACJ\\\"}\"\n};\nvar _worklet_3232161124638_init_data = {\n  code: \"function anonymous(animatedRef, x, y, animated) {\\n  const {\\n    dispatchCommand\\n  } = this._closure;\\n  dispatchCommand(animatedRef, 'scrollTo', [x, y, animated]);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"animatedRef\\\",\\\"x\\\",\\\"y\\\",\\\"animated\\\",\\\"dispatchCommand\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\\\"],\\\"mappings\\\":\\\"AAgFa,SAACA,UAAAC,WAAmB,EAAAC,CAAA,EAAAC,CAAA,EAAQC,QAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG1CD,eAAe,CAACJ,WAAW,EAAE,UAAU,EAAE,CAACC,CAAC,EAAEC,CAAC,EAAEC,QAAQ,CAAC,CAAC;AAC5D\\\"}\"\n};\nvar _worklet_5482870920827_init_data = {\n  code: \"function anonymous(animatedRef, x, y, animated) {\\n  if (!_WORKLET) {\\n    return;\\n  }\\n  const viewTag = animatedRef();\\n  _scrollTo(viewTag, x, y, animated);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"animatedRef\\\",\\\"x\\\",\\\"y\\\",\\\"animated\\\",\\\"_WORKLET\\\",\\\"viewTag\\\",\\\"_scrollTo\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\\\"],\\\"mappings\\\":\\\"AAsFa,SAACA,UAAAC,WAAmB,EAAAC,CAAA,EAAAC,CAAA,EAAQC,QAAK;EAG1C,IAAI,CAACC,QAAQ,EAAE;IACb;EACF;EAGA,MAAMC,OAAO,GAAGL,WAAW,CAAC,CAAC;EAC7BM,SAAS,CAACD,OAAO,EAAEJ,CAAC,EAAEC,CAAC,EAAEC,QAAQ,CAAC;AACpC\\\"}\"\n};\n\nif (isWeb()) {\n  scrollTo = function () {\n    var _e = [new global.Error(), 1, -27];\n\n    var _f = function _f(animatedRef, x, y, animated) {\n      var element = animatedRef();\n      element.scrollTo({\n        x: x,\n        y: y,\n        animated: animated\n      });\n    };\n\n    _f._closure = {};\n    _f.__initData = _worklet_17208598284085_init_data;\n    _f.__workletHash = 17208598284085;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n} else if (isNative && global._IS_FABRIC) {\n  scrollTo = function () {\n    var _e = [new global.Error(), -2, -27];\n\n    var _f = function _f(animatedRef, x, y, animated) {\n      dispatchCommand(animatedRef, 'scrollTo', [x, y, animated]);\n    };\n\n    _f._closure = {\n      dispatchCommand: dispatchCommand\n    };\n    _f.__initData = _worklet_3232161124638_init_data;\n    _f.__workletHash = 3232161124638;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n} else if (isNative) {\n  scrollTo = function () {\n    var _e = [new global.Error(), 1, -27];\n\n    var _f = function _f(animatedRef, x, y, animated) {\n      if (!_WORKLET) {\n        return;\n      }\n\n      var viewTag = animatedRef();\n\n      _scrollTo(viewTag, x, y, animated);\n    };\n\n    _f._closure = {};\n    _f.__initData = _worklet_5482870920827_init_data;\n    _f.__workletHash = 5482870920827;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n} else {\n  scrollTo = function scrollTo(_animatedRef, _x, _y) {};\n}\n\nvar _worklet_17450441994509_init_data = {\n  code: \"function setGestureState(handlerTag, newState) {\\n  const {\\n    isNative\\n  } = this._closure;\\n  if (!_WORKLET || !isNative) {\\n    console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\\n    return;\\n  }\\n  _setGestureState(handlerTag, newState);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setGestureState\\\",\\\"handlerTag\\\",\\\"newState\\\",\\\"isNative\\\",\\\"_closure\\\",\\\"_WORKLET\\\",\\\"console\\\",\\\"warn\\\",\\\"_setGestureState\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/NativeMethods.js\\\"],\\\"mappings\\\":\\\"AAsGO,SAAAA,eAASA,CAAgBC,UAAA,EAAUC,QAAE,EAAQ;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlD,IAAI,CAACC,QAAQ,IAAI,CAACF,QAAQ,EAAE;IAC1BG,OAAO,CAACC,IAAI,CAAC,uEAAuE,CAAC;IACrF;EACF;EACAC,gBAAgB,CAACP,UAAU,EAAEC,QAAQ,CAAC;AACxC\\\"}\"\n};\nexport var setGestureState = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(handlerTag, newState) {\n    if (!_WORKLET || !isNative) {\n      console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n      return;\n    }\n\n    _setGestureState(handlerTag, newState);\n  };\n\n  _f._closure = {\n    isNative: isNative\n  };\n  _f.__initData = _worklet_17450441994509_init_data;\n  _f.__workletHash = 17450441994509;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"sources":["NativeMethods.ts"],"names":["isChromeDebugger","isWeb","shouldBeUseWeb","getTag","view","findNodeHandle","isNative","measure","animatedRef","element","viewportOffset","getBoundingClientRect","width","offsetWidth","height","offsetHeight","x","offsetLeft","y","offsetTop","pageX","left","pageY","top","_animatedRef","console","warn","_WORKLET","viewTag","measured","_measure","isNaN","dispatchCommand","commandName","args","shadowNodeWrapper","_dispatchCommand","scrollTo","animated","global","_IS_FABRIC","_scrollTo","_x","_y","setGestureState","handlerTag","newState","_setGestureState"],"mappings":"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","sourcesContent":["/* global _WORKLET _measure _scrollTo _dispatchCommand _setGestureState */\nimport { Component } from 'react';\nimport { findNodeHandle } from 'react-native';\nimport { MeasuredDimensions, ShadowNodeWrapper } from './commonTypes';\nimport { RefObjectFunction } from './hook/commonTypes';\nimport { isChromeDebugger, isWeb, shouldBeUseWeb } from './PlatformChecker';\n\nexport function getTag(\n  view: null | number | React.Component<any, any> | React.ComponentClass<any>\n): null | number {\n  return findNodeHandle(view);\n}\n\nconst isNative = !shouldBeUseWeb();\n\nexport let measure: (\n  animatedRef: RefObjectFunction<Component>\n) => MeasuredDimensions | null;\n\nif (isWeb()) {\n  measure = (animatedRef: RefObjectFunction<Component>) => {\n    const element = animatedRef() as unknown as HTMLElement; // TODO: fix typing of animated refs on web\n    const viewportOffset = element.getBoundingClientRect();\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      x: element.offsetLeft,\n      y: element.offsetTop,\n      pageX: viewportOffset.left,\n      pageY: viewportOffset.top,\n    };\n  };\n} else if (isChromeDebugger()) {\n  measure = (_animatedRef: RefObjectFunction<Component>) => {\n    console.warn('[Reanimated] measure() cannot be used with Chrome Debugger.');\n    return null;\n  };\n} else {\n  measure = (animatedRef: RefObjectFunction<Component>) => {\n    'worklet';\n    if (!_WORKLET) {\n      return null;\n    }\n\n    const viewTag = animatedRef();\n    if (viewTag === -1) {\n      console.warn(\n        `[Reanimated] The view with tag ${viewTag} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n      );\n      return null;\n    }\n\n    const measured = _measure(viewTag);\n    if (measured === null) {\n      console.warn(\n        `[Reanimated] The view with tag ${viewTag} has some undefined, not-yet-computed or meaningless value of \\`LayoutMetrics\\` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`\n      );\n      return null;\n    } else if (measured.x === -1234567) {\n      console.warn(\n        `[Reanimated] The view with tag ${viewTag} returned an invalid measurement response.`\n      );\n      return null;\n    } else if (isNaN(measured.x)) {\n      console.warn(\n        `[Reanimated] The view with tag ${viewTag} gets view-flattened on Android. To disable view-flattening, set \\`collapsable={false}\\` on this component.`\n      );\n      return null;\n    } else {\n      return measured;\n    }\n  };\n}\n\nexport function dispatchCommand(\n  animatedRef: RefObjectFunction<Component>,\n  commandName: string,\n  args: Array<unknown>\n): void {\n  'worklet';\n  if (!_WORKLET || !isNative) {\n    return;\n  }\n\n  // dispatchCommand works only on Fabric where animatedRef returns\n  // an object (ShadowNodeWrapper) and not a number\n  const shadowNodeWrapper = animatedRef() as ShadowNodeWrapper;\n  _dispatchCommand!(shadowNodeWrapper, commandName, args);\n}\n\nexport let scrollTo: (\n  animatedRef: RefObjectFunction<Component>,\n  x: number,\n  y: number,\n  animated: boolean\n) => void;\n\nif (isWeb()) {\n  scrollTo = (\n    animatedRef: RefObjectFunction<Component>,\n    x: number,\n    y: number,\n    animated: boolean\n  ) => {\n    'worklet';\n    const element = animatedRef() as unknown as HTMLElement;\n    // @ts-ignore same call as in react-native-web\n    element.scrollTo({ x, y, animated });\n  };\n} else if (isNative && global._IS_FABRIC) {\n  scrollTo = (\n    animatedRef: RefObjectFunction<Component>,\n    x: number,\n    y: number,\n    animated: boolean\n  ) => {\n    'worklet';\n    dispatchCommand(animatedRef, 'scrollTo', [x, y, animated]);\n  };\n} else if (isNative) {\n  scrollTo = (\n    animatedRef: RefObjectFunction<Component>,\n    x: number,\n    y: number,\n    animated: boolean\n  ) => {\n    'worklet';\n    if (!_WORKLET) {\n      return;\n    }\n\n    // Calling animatedRef on Paper returns a number (nativeTag)\n    const viewTag = animatedRef() as number;\n    _scrollTo(viewTag, x, y, animated);\n  };\n} else {\n  scrollTo = (\n    _animatedRef: RefObjectFunction<Component>,\n    _x: number,\n    _y: number\n  ) => {\n    // no-op\n  };\n}\n\nexport function setGestureState(handlerTag: number, newState: number): void {\n  'worklet';\n  if (!_WORKLET || !isNative) {\n    console.warn(\n      '[Reanimated] You can not use setGestureState in non-worklet function.'\n    );\n    return;\n  }\n  _setGestureState(handlerTag, newState);\n}\n"]},"metadata":{},"sourceType":"module"}