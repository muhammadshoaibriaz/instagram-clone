{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"scrollViewOffset\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport createAnimatedComponent from \"../../createAnimatedComponent\";\nimport { useScrollViewOffset, useAnimatedRef } from \"../hook\";\nvar AnimatedScrollViewComponent = createAnimatedComponent(ScrollView);\nvar AnimatedScrollView = forwardRef(function (props, ref) {\n  var scrollViewOffset = props.scrollViewOffset,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var aref = ref === null ? useAnimatedRef() : ref;\n\n  if (scrollViewOffset) {\n    useScrollViewOffset(aref, scrollViewOffset);\n  }\n\n  return React.createElement(AnimatedScrollViewComponent, _extends({\n    ref: aref\n  }, restProps));\n});\nexport default AnimatedScrollView;","map":{"version":3,"sources":["ScrollView.tsx"],"names":["React","forwardRef","createAnimatedComponent","useScrollViewOffset","useAnimatedRef","AnimatedScrollViewComponent","ScrollView","AnimatedScrollView","props","ref","scrollViewOffset","restProps","aref"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,QAA2D,OAA3D;;AAGA,OAAOC,uBAAP;AAEA,SAASC,mBAAT,EAA8BC,cAA9B;AAEA,IAAMC,2BAA2B,GAAGH,uBAAuB,CACzDI,UADyD,CAA3D;AAUA,IAAMC,kBAAwC,GAAGN,UAAU,CACzD,UAACO,KAAD,EAAiCC,GAAjC,EAA4E;EAC1E,IAAQC,gBAAR,GAA2CF,KAA3C,CAAQE,gBAAR;EAAA,IAA6BC,SAA7B,4BAA2CH,KAA3C;;EACA,IAAMI,IAAI,GAAGH,GAAG,KAAK,IAARA,GAAeL,cAAc,EAA7BK,GAA8CA,GAA3D;;EAEA,IAAIC,gBAAJ,EAAsB;IACpBP,mBAAmB,CACjBS,IADiB,EAEjBF,gBAFiB,CAAnBP;EAIF;;EACA,OAAOH,KAAAA,CAAAA,aAAAA,CAACK,2BAADL,EAA4B,QAAA,CAAA;IAACS,GAAG,EAAEG;EAAN,CAAA,EAAgBD,SAAhB,CAA5BX,CAAP;AACD,CAZwD,CAA3D;AAcA,eAAeO,kBAAf","sourcesContent":["import React, { ForwardedRef, forwardRef, RefObject } from 'react';\nimport { ScrollView, ScrollViewProps } from 'react-native';\nimport type Animated from 'react-native-reanimated';\nimport createAnimatedComponent from '../../createAnimatedComponent';\nimport { SharedValue } from '../commonTypes';\nimport { useScrollViewOffset, useAnimatedRef } from '../hook';\n\nconst AnimatedScrollViewComponent = createAnimatedComponent(\n  ScrollView as any\n) as any;\n\nexport interface AnimatedScrollViewProps extends ScrollViewProps {\n  scrollViewOffset?: SharedValue<number>;\n}\n\ntype AnimatedScrollViewFC = React.FC<AnimatedScrollViewProps>;\n\nconst AnimatedScrollView: AnimatedScrollViewFC = forwardRef(\n  (props: AnimatedScrollViewProps, ref: ForwardedRef<Animated.ScrollView>) => {\n    const { scrollViewOffset, ...restProps } = props;\n    const aref = ref === null ? useAnimatedRef<ScrollView>() : ref;\n\n    if (scrollViewOffset) {\n      useScrollViewOffset(\n        aref as RefObject<Animated.ScrollView>,\n        scrollViewOffset\n      );\n    }\n    return <AnimatedScrollViewComponent ref={aref} {...restProps} />;\n  }\n);\nexport default AnimatedScrollView;\n"]},"metadata":{},"sourceType":"module"}