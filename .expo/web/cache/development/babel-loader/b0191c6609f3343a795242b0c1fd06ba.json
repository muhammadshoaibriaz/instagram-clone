{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { processColor } from \"./Colors\";\nimport { makeShareable, isConfigured } from \"./core\";\nimport { _updatePropsJS } from \"./js-reanimated\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nexport var colorProps = ['backgroundColor', 'borderBottomColor', 'borderColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'borderStartColor', 'borderEndColor', 'color', 'shadowColor', 'textDecorationColor', 'tintColor', 'textShadowColor', 'overlayColor'];\nexport var ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\nvar updatePropsByPlatform;\nvar _worklet_11557893219017_init_data = {\n  code: \"function anonymous(_, updates, maybeViewRef) {\\n  const {\\n    _updatePropsJS\\n  } = this._closure;\\n  if (maybeViewRef) {\\n    maybeViewRef.items.forEach(function (item, _) {\\n      _updatePropsJS(updates, item);\\n    });\\n  }\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"_\\\",\\\"updates\\\",\\\"maybeViewRef\\\",\\\"_updatePropsJS\\\",\\\"_closure\\\",\\\"items\\\",\\\"forEach\\\",\\\"item\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\\\"],\\\"mappings\\\":\\\"AAW0B,SAACA,SAAGA,CAAAC,CAAA,EAAOC,OAAE,EAAAC,YAAiB;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpD,IAAIF,YAAY,EAAE;IAChBA,YAAY,CAACG,KAAK,CAACC,OAAO,CAAC,UAACC,IAAI,EAAEP,CAAC,EAAK;MACtCG,cAAc,CAACF,OAAO,EAAEM,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ;AACF\\\"}\"\n};\nvar _worklet_6695634921709_init_data = {\n  code: \"function anonymous(viewDescriptors, updates, _) {\\n  const {\\n    ColorProperties,\\n    processColor\\n  } = this._closure;\\n  for (const key in updates) {\\n    if (ColorProperties.indexOf(key) !== -1) {\\n      updates[key] = processColor(updates[key]);\\n    }\\n  }\\n  viewDescriptors.value.forEach(function (viewDescriptor) {\\n    _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\\n  });\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewDescriptors\\\",\\\"updates\\\",\\\"_\\\",\\\"ColorProperties\\\",\\\"processColor\\\",\\\"_closure\\\",\\\"key\\\",\\\"indexOf\\\",\\\"value\\\",\\\"forEach\\\",\\\"viewDescriptor\\\",\\\"_updatePropsFabric\\\",\\\"shadowNodeWrapper\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\\\"],\\\"mappings\\\":\\\"AAsB4B,SAACA,UAAAC,eAAiB,EAAOC,OAAQ,EAAAC,CAAA;EAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvD,KAAK,MAAMC,GAAG,IAAIL,OAAO,EAAE;IACzB,IAAIE,eAAe,CAACI,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCL,OAAO,CAACK,GAAG,CAAC,GAAGF,YAAY,CAACH,OAAO,CAACK,GAAG,CAAC,CAAC;IAC3C;EACF;EACAN,eAAe,CAACQ,KAAK,CAACC,OAAO,CAAC,UAAAC,cAAc,EAAI;IAC9CC,kBAAkB,CAACD,cAAc,CAACE,iBAAiB,EAAEX,OAAO,CAAC;EAC/D,CAAC,CAAC;AACJ\\\"}\"\n};\nvar _worklet_10133092834546_init_data = {\n  code: \"function anonymous(viewDescriptors, updates, _) {\\n  const {\\n    ColorProperties,\\n    processColor\\n  } = this._closure;\\n  for (const key in updates) {\\n    if (ColorProperties.indexOf(key) !== -1) {\\n      updates[key] = processColor(updates[key]);\\n    }\\n  }\\n  viewDescriptors.value.forEach(function (viewDescriptor) {\\n    _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\\n  });\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewDescriptors\\\",\\\"updates\\\",\\\"_\\\",\\\"ColorProperties\\\",\\\"processColor\\\",\\\"_closure\\\",\\\"key\\\",\\\"indexOf\\\",\\\"value\\\",\\\"forEach\\\",\\\"viewDescriptor\\\",\\\"_updatePropsPaper\\\",\\\"tag\\\",\\\"name\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\\\"],\\\"mappings\\\":\\\"AAmC4B,SAACA,UAAAC,eAAiB,EAAOC,OAAQ,EAAAC,CAAA;EAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvD,KAAK,MAAMC,GAAG,IAAIL,OAAO,EAAE;IACzB,IAAIE,eAAe,CAACI,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCL,OAAO,CAACK,GAAG,CAAC,GAAGF,YAAY,CAACH,OAAO,CAACK,GAAG,CAAC,CAAC;IAC3C;EACF;EACAN,eAAe,CAACQ,KAAK,CAACC,OAAO,CAAC,UAAAC,cAAc,EAAI;IAC9CC,iBAAiB,CAACD,cAAc,CAACE,GAAG,EAAEF,cAAc,CAACG,IAAI,IAAI,SAAS,EAAEZ,OAAO,CAAC;EAClF,CAAC,CAAC;AACJ\\\"}\"\n};\n\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = function () {\n    var _e = [new global.Error(), -2, -27];\n\n    var _f = function _f(_, updates, maybeViewRef) {\n      if (maybeViewRef) {\n        maybeViewRef.items.forEach(function (item, _) {\n          _updatePropsJS(updates, item);\n        });\n      }\n    };\n\n    _f._closure = {\n      _updatePropsJS: _updatePropsJS\n    };\n    _f.__initData = _worklet_11557893219017_init_data;\n    _f.__workletHash = 11557893219017;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = function () {\n      var _e = [new global.Error(), -3, -27];\n\n      var _f = function _f(viewDescriptors, updates, _) {\n        for (var key in updates) {\n          if (ColorProperties.indexOf(key) !== -1) {\n            updates[key] = processColor(updates[key]);\n          }\n        }\n\n        viewDescriptors.value.forEach(function (viewDescriptor) {\n          _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\n        });\n      };\n\n      _f._closure = {\n        ColorProperties: ColorProperties,\n        processColor: processColor\n      };\n      _f.__initData = _worklet_6695634921709_init_data;\n      _f.__workletHash = 6695634921709;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n  } else {\n    updatePropsByPlatform = function () {\n      var _e = [new global.Error(), -3, -27];\n\n      var _f = function _f(viewDescriptors, updates, _) {\n        for (var key in updates) {\n          if (ColorProperties.indexOf(key) !== -1) {\n            updates[key] = processColor(updates[key]);\n          }\n        }\n\n        viewDescriptors.value.forEach(function (viewDescriptor) {\n          _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n        });\n      };\n\n      _f._closure = {\n        ColorProperties: ColorProperties,\n        processColor: processColor\n      };\n      _f.__initData = _worklet_10133092834546_init_data;\n      _f.__workletHash = 10133092834546;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n  }\n}\n\nexport var updateProps = updatePropsByPlatform;\nexport var updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) {\n  adapters.forEach(function (adapter) {\n    adapter(updates);\n  });\n  animatedStyle.current.value = _objectSpread(_objectSpread({}, animatedStyle.current.value), updates);\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;","map":{"version":3,"sources":["UpdateProps.ts"],"names":["processColor","makeShareable","isConfigured","_updatePropsJS","shouldBeUseWeb","colorProps","ColorProperties","updatePropsByPlatform","_","updates","maybeViewRef","items","forEach","item","global","_IS_FABRIC","viewDescriptors","key","indexOf","value","viewDescriptor","_updatePropsFabric","shadowNodeWrapper","_updatePropsPaper","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current"],"mappings":"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","sourcesContent":["/* global _updatePropsPaper _updatePropsFabric */\nimport { MutableRefObject } from 'react';\nimport { processColor } from './Colors';\nimport { AnimatedStyle, SharedValue, StyleProps } from './commonTypes';\nimport { makeShareable, isConfigured } from './core';\nimport { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ViewRefSet } from './ViewDescriptorsSet';\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'color',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n];\n\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\n\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = (\n    _: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle,\n    maybeViewRef: ViewRefSet<any> | undefined\n  ): void => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsFabric!(viewDescriptor.shadowNodeWrapper, updates);\n      });\n    };\n  } else {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsPaper!(\n          viewDescriptor.tag,\n          viewDescriptor.name || 'RCTView',\n          updates\n        );\n      });\n    };\n  }\n}\n\nexport const updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined\n) => void = updatePropsByPlatform;\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: ((updates: AnimatedStyle) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n"]},"metadata":{},"sourceType":"module"}