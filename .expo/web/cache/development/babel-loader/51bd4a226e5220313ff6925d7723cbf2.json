{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from \"../frameCallback/FrameCallbackRegistryJS\";\nvar frameCallbackRegistry = new FrameCallbackRegistryJS();\nexport function useFrameCallback(callback) {\n  var autostart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var ref = useRef({\n    setActive: function setActive(isActive) {\n      frameCallbackRegistry.manageStateFrameCallback(ref.current.callbackId, isActive);\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1\n  });\n  useEffect(function () {\n    ref.current.callbackId = frameCallbackRegistry.registerFrameCallback(callback);\n    ref.current.setActive(ref.current.isActive);\n    return function () {\n      frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);\n      ref.current.callbackId = -1;\n    };\n  }, [callback, autostart]);\n  return ref.current;\n}","map":{"version":3,"sources":["useFrameCallback.ts"],"names":["useEffect","useRef","FrameCallbackRegistryJS","frameCallbackRegistry","useFrameCallback","callback","autostart","ref","setActive","isActive","manageStateFrameCallback","current","callbackId","registerFrameCallback","unregisterFrameCallback"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,uBAAP;AAQA,IAAMC,qBAAqB,GAAG,IAAID,uBAAJ,EAA9B;AAEA,OAAO,SAASE,gBAAT,CACLC,QADK,EAGU;EAAA,IADfC,SAAS,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAG,IACG;EACf,IAAMC,GAAG,GAAGN,MAAM,CAAgB;IAChCO,SAAS,EAAGC,mBAAAA,QAAiB,EAAK;MAChCN,qBAAqB,CAACO,wBAAtBP,CACEI,GAAG,CAACI,OAAJJ,CAAYK,UADdT,EAEEM,QAFFN;MAIAI,GAAG,CAACI,OAAJJ,CAAYE,QAAZF,GAAuBE,QAAvBF;IACD,CAP+B;IAQhCE,QAAQ,EAAEH,SARsB;IAShCM,UAAU,EAAE,CAAC;EATmB,CAAhB,CAAlB;EAYAZ,SAAS,CAAC,YAAM;IACdO,GAAG,CAACI,OAAJJ,CAAYK,UAAZL,GACEJ,qBAAqB,CAACU,qBAAtBV,CAA4CE,QAA5CF,CADFI;IAEAA,GAAG,CAACI,OAAJJ,CAAYC,SAAZD,CAAsBA,GAAG,CAACI,OAAJJ,CAAYE,QAAlCF;IAEA,OAAO,YAAM;MACXJ,qBAAqB,CAACW,uBAAtBX,CAA8CI,GAAG,CAACI,OAAJJ,CAAYK,UAA1DT;MACAI,GAAG,CAACI,OAAJJ,CAAYK,UAAZL,GAAyB,CAAC,CAA1BA;IACD,CAHD;EAID,CATQ,EASN,CAACF,QAAD,EAAWC,SAAX,CATM,CAATN;EAWA,OAAOO,GAAG,CAACI,OAAX;AACF","sourcesContent":["import { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from '../frameCallback/FrameCallbackRegistryJS';\nimport { FrameInfo } from '../frameCallback/FrameCallbackRegistryUI';\n\nexport type FrameCallback = {\n  setActive: (isActive: boolean) => void;\n  isActive: boolean;\n  callbackId: number;\n};\nconst frameCallbackRegistry = new FrameCallbackRegistryJS();\n\nexport function useFrameCallback(\n  callback: (frameInfo: FrameInfo) => void,\n  autostart = true\n): FrameCallback {\n  const ref = useRef<FrameCallback>({\n    setActive: (isActive: boolean) => {\n      frameCallbackRegistry.manageStateFrameCallback(\n        ref.current.callbackId,\n        isActive\n      );\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1,\n  });\n\n  useEffect(() => {\n    ref.current.callbackId =\n      frameCallbackRegistry.registerFrameCallback(callback);\n    ref.current.setActive(ref.current.isActive);\n\n    return () => {\n      frameCallbackRegistry.unregisterFrameCallback(ref.current.callbackId);\n      ref.current.callbackId = -1;\n    };\n  }, [callback, autostart]);\n\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}