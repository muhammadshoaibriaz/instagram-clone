{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport NativeReanimatedModule from \"./NativeReanimated\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nimport { registerWorkletStackDetails } from \"./errors\";\nimport { jsVersion } from \"./platform-specific/jsVersion\";\nvar USE_STUB_IMPLEMENTATION = shouldBeUseWeb();\n\nvar _shareableCache = new WeakMap();\n\nvar _shareableFlag = Symbol('shareable flag');\n\nvar MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value) {\n  return MAGIC_KEY in value;\n}\n\nexport function registerShareableMapping(shareable, shareableRef) {\n  if (USE_STUB_IMPLEMENTATION) {\n    return;\n  }\n\n  _shareableCache.set(shareable, shareableRef || _shareableFlag);\n}\n\nfunction isPlainJSObject(object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\nvar _worklet_65486183985_init_data = {\n  code: \"function anonymous() {\\n  return new Proxy({}, {\\n    get: function (_, prop) {\\n      if (prop === '_isReanimatedSharedValue') {\\n        return false;\\n      }\\n      throw new Error(\\\"Trying to access property `\\\" + prop + \\\"` of an object which cannot be sent to the UI runtime.\\\");\\n    },\\n    set: function () {\\n      throw new Error('Trying to write to an object which cannot be sent to the UI runtime.');\\n    }\\n  });\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/shareables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"Proxy\\\",\\\"get\\\",\\\"_\\\",\\\"prop\\\",\\\"Error\\\",\\\"set\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/shareables.js\\\"],\\\"mappings\\\":\\\"AAwCU,SAAAA,SAAMA,CAAA;EAGZ,OAAO,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE;IACnBC,GAAG,EAAE,SAAAA,CAACC,CAAC,EAAEC,IAAI,EAAK;MAChB,IAAIA,IAAI,KAAK,0BAA0B,EAAE;QAQvC,OAAO,KAAK;MACd;MACA,MAAM,IAAIC,KAAK,iCAAgCD,IAAK,2DAAwD,CAAC;IAC/G,CAAC;IACDE,GAAG,EAAE,SAAAA,CAAA,EAAM;MACT,MAAM,IAAID,KAAK,CAAC,sEAAsE,CAAC;IACzF;EACF,CAAC,CAAC;AACJ\\\"}\"\n};\nvar INACCESSIBLE_OBJECT = {\n  __init: function () {\n    var _e = [new global.Error(), 1, -27];\n\n    var _f = function _f() {\n      return new Proxy({}, {\n        get: function get(_, prop) {\n          if (prop === '_isReanimatedSharedValue') {\n            return false;\n          }\n\n          throw new Error(`Trying to access property \\`${prop}\\` of an object which cannot be sent to the UI runtime.`);\n        },\n        set: function set() {\n          throw new Error('Trying to write to an object which cannot be sent to the UI runtime.');\n        }\n      });\n    };\n\n    _f._closure = {};\n    _f.__initData = _worklet_65486183985_init_data;\n    _f.__workletHash = 65486183985;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }()\n};\nvar DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\nvar processedObjectAtThresholdDepth;\nexport function makeShareableCloneRecursive(value) {\n  var shouldPersistRemote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error('Trying to convert a cyclic object to a shareable. This is not supported.');\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n\n  var type = typeof value;\n  var isTypeObject = type === 'object';\n  var isTypeFunction = type === 'function';\n\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    var cached = _shareableCache.get(value);\n\n    if (cached === _shareableFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached;\n    } else {\n      var toAdapt;\n\n      if (Array.isArray(value)) {\n        toAdapt = value.map(function (element) {\n          return makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1);\n        });\n      } else if (isTypeFunction && value.__workletHash === undefined) {\n        toAdapt = value;\n      } else if (isHostObject(value)) {\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n\n        if (value.__workletHash !== undefined) {\n          if (__DEV__) {\n            if (value.__version !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${value.__version}). Please clear your Metro bundler cache with \\`yarn start --reset-cache\\`,\n              \\`npm start -- --reset-cache\\` or \\`expo start -c\\` and run the app again.`);\n            }\n\n            registerWorkletStackDetails(value.__workletHash, value.__stackDetails);\n            delete value.__stackDetails;\n          }\n\n          toAdapt.__initData = makeShareableCloneRecursive(value.__initData, true, depth + 1);\n          delete value.__initData;\n        }\n\n        for (var _ref3 of Object.entries(value)) {\n          var _ref2 = _slicedToArray(_ref3, 2);\n\n          var key = _ref2[0];\n          var element = _ref2[1];\n          toAdapt[key] = makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1);\n        }\n      } else {\n        var inaccessibleObject = makeShareableCloneRecursive(INACCESSIBLE_OBJECT);\n\n        _shareableCache.set(value, inaccessibleObject);\n\n        return inaccessibleObject;\n      }\n\n      if (__DEV__) {\n        Object.freeze(value);\n      }\n\n      var adopted = NativeReanimatedModule.makeShareableClone(toAdapt, shouldPersistRemote);\n\n      _shareableCache.set(value, adopted);\n\n      _shareableCache.set(adopted, _shareableFlag);\n\n      return adopted;\n    }\n  }\n\n  return NativeReanimatedModule.makeShareableClone(value, shouldPersistRemote);\n}\nvar _worklet_8401583828990_init_data = {\n  code: \"function makeShareableCloneOnUIRecursive(value) {\\n  const {\\n    USE_STUB_IMPLEMENTATION\\n  } = this._closure;\\n  if (USE_STUB_IMPLEMENTATION) {\\n    return value;\\n  }\\n  function cloneRecursive(value) {\\n    const type = typeof value;\\n    if ((type === 'object' || type === 'function') && value !== null) {\\n      let toAdapt;\\n      if (Array.isArray(value)) {\\n        toAdapt = value.map(function (element) {\\n          return cloneRecursive(element);\\n        });\\n      } else if (value !== undefined) {\\n        toAdapt = {};\\n        for (const [key, element] of Object.entries(value)) {\\n          toAdapt[key] = cloneRecursive(element);\\n        }\\n      }\\n      return _makeShareableClone(toAdapt);\\n    }\\n    return _makeShareableClone(value);\\n  }\\n  return cloneRecursive(value);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/shareables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"makeShareableCloneOnUIRecursive\\\",\\\"value\\\",\\\"USE_STUB_IMPLEMENTATION\\\",\\\"_closure\\\",\\\"cloneRecursive\\\",\\\"type\\\",\\\"toAdapt\\\",\\\"Array\\\",\\\"isArray\\\",\\\"map\\\",\\\"element\\\",\\\"undefined\\\",\\\"key\\\",\\\"Object\\\",\\\"entries\\\",\\\"_makeShareableClone\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/shareables.js\\\"],\\\"mappings\\\":\\\"AAkKO,SAAAA,+BAASA,CAAgCC,KAAA,EAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnD,IAAID,uBAAuB,EAAE;IAG3B,OAAOD,KAAK;EACd;EACA,SAASG,cAAcA,CAACH,KAAK,EAAE;IAC7B,MAAMI,IAAI,GAAG,OAAOJ,KAAK;IACzB,IAAI,CAACI,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,KAAKJ,KAAK,KAAK,IAAI,EAAE;MAChE,IAAIK,OAAO;MACX,IAAIC,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,EAAE;QACxBK,OAAO,GAAGL,KAAK,CAACQ,GAAG,CAAC,UAAAC,OAAO;UAAA,OAAIN,cAAc,CAACM,OAAO,CAAC;QAAA,EAAC;MACzD,CAAC,MAAM,IAAIT,KAAK,KAAKU,SAAS,EAAE;QAC9BL,OAAO,GAAG,CAAC,CAAC;QACZ,KAAK,MAAM,CAACM,GAAG,EAAEF,OAAO,CAAC,IAAIG,MAAM,CAACC,OAAO,CAACb,KAAK,CAAC,EAAE;UAClDK,OAAO,CAACM,GAAG,CAAC,GAAGR,cAAc,CAACM,OAAO,CAAC;QACxC;MACF;MACA,OAAOK,mBAAmB,CAACT,OAAO,CAAC;IACrC;IACA,OAAOS,mBAAmB,CAACd,KAAK,CAAC;EACnC;EACA,OAAOG,cAAc,CAACH,KAAK,CAAC;AAC9B\\\"}\"\n};\nexport var makeShareableCloneOnUIRecursive = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(value) {\n    if (USE_STUB_IMPLEMENTATION) {\n      return value;\n    }\n\n    function cloneRecursive(value) {\n      var type = typeof value;\n\n      if ((type === 'object' || type === 'function') && value !== null) {\n        var toAdapt;\n\n        if (Array.isArray(value)) {\n          toAdapt = value.map(function (element) {\n            return cloneRecursive(element);\n          });\n        } else if (value !== undefined) {\n          toAdapt = {};\n\n          for (var _ref6 of Object.entries(value)) {\n            var _ref5 = _slicedToArray(_ref6, 2);\n\n            var key = _ref5[0];\n            var element = _ref5[1];\n            toAdapt[key] = cloneRecursive(element);\n          }\n        }\n\n        return _makeShareableClone(toAdapt);\n      }\n\n      return _makeShareableClone(value);\n    }\n\n    return cloneRecursive(value);\n  };\n\n  _f._closure = {\n    USE_STUB_IMPLEMENTATION: USE_STUB_IMPLEMENTATION\n  };\n  _f.__initData = _worklet_8401583828990_init_data;\n  _f.__workletHash = 8401583828990;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_13878384066121_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    value\\n  } = this._closure;\\n  return value;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/shareables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/shareables.js\\\"],\\\"mappings\\\":\\\"AAiMY,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,OAAOD,KAAK;AACd\\\"}\"\n};\nexport function makeShareable(value) {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -2, -27];\n\n      var _f = function _f() {\n        return value;\n      };\n\n      _f._closure = {\n        value: value\n      };\n      _f.__initData = _worklet_13878384066121_init_data;\n      _f.__workletHash = 13878384066121;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()\n  });\n  registerShareableMapping(value, handle);\n  return value;\n}","map":{"version":3,"sources":["shareables.ts"],"names":["NativeReanimatedModule","shouldBeUseWeb","registerWorkletStackDetails","jsVersion","USE_STUB_IMPLEMENTATION","_shareableCache","WeakMap","_shareableFlag","Symbol","MAGIC_KEY","isHostObject","value","registerShareableMapping","shareable","shareableRef","set","isPlainJSObject","object","Object","getPrototypeOf","prototype","INACCESSIBLE_OBJECT","__init","Proxy","get","_","prop","Error","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","makeShareableCloneRecursive","shouldPersistRemote","depth","undefined","type","isTypeObject","isTypeFunction","cached","toAdapt","Array","isArray","map","element","__workletHash","__DEV__","__version","__stackDetails","__initData","key","entries","inaccessibleObject","freeze","adopted","makeShareableClone","makeShareableCloneOnUIRecursive","cloneRecursive","_makeShareableClone","makeShareable","handle"],"mappings":"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","sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { ShareableRef } from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// runnning the code on separate VMs.\nconst USE_STUB_IMPLEMENTATION = shouldBeUseWeb();\n\nconst _shareableCache = new WeakMap<\n  Record<string, unknown>,\n  ShareableRef<any> | symbol\n>();\n// the below symbol is used to represent a mapping from the value to itself\n// this is used to allow for a converted shareable to be passed to makeShareableClone\nconst _shareableFlag = Symbol('shareable flag');\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: any): boolean {\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nexport function registerShareableMapping(\n  shareable: any,\n  shareableRef?: ShareableRef<any>\n): void {\n  if (USE_STUB_IMPLEMENTATION) {\n    return;\n  }\n  _shareableCache.set(shareable, shareableRef || _shareableFlag);\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: any, prop: string) => {\n          if (prop === '_isReanimatedSharedValue') {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracing inputs recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new Error(\n            `Trying to access property \\`${prop}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new Error(\n            'Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: any;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be trasferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error(\n        'Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = _shareableCache.get(value);\n    if (cached === _shareableFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n      } else if (isTypeFunction && value.__workletHash === undefined) {\n        // this is a remote function\n        toAdapt = value;\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (value.__workletHash !== undefined) {\n          // we are converting a worklet\n          if (__DEV__) {\n            if (value.__version !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${value.__version}). Please clear your Metro bundler cache with \\`yarn start --reset-cache\\`,\n              \\`npm start -- --reset-cache\\` or \\`expo start -c\\` and run the app again.`);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails\n            );\n            delete value.__stackDetails;\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings represeting the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n          delete value.__initData;\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        _shareableCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      if (__DEV__) {\n        // we freeze objects that are transformed to shareable. This should help\n        // detect issues when someone modifies data after it's been converted to\n        // shareable. Meaning that they may be doing a faulty assumption in their\n        // code expecting that the updates are going to automatically populate to\n        // the object sent to the UI thread. If the user really wants some objects\n        // to be mutable they should use shared values instead.\n        Object.freeze(value);\n      }\n      const adopted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote\n      );\n      _shareableCache.set(value, adopted);\n      _shareableCache.set(adopted, _shareableFlag);\n      return adopted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(value, shouldPersistRemote);\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(value: T): ShareableRef<T> {\n  'worklet';\n  if (USE_STUB_IMPLEMENTATION) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  function cloneRecursive<T>(value: T): ShareableRef<T> {\n    const type = typeof value;\n    if ((type === 'object' || type === 'function') && value !== null) {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) => cloneRecursive(element));\n      } else if (value !== undefined) {\n        toAdapt = {};\n        for (const [key, element] of Object.entries(value)) {\n          toAdapt[key] = cloneRecursive(element);\n        }\n      }\n      return _makeShareableClone(toAdapt);\n    }\n    return _makeShareableClone(value);\n  }\n  return cloneRecursive(value);\n}\n\nexport function makeShareable<T>(value: T): T {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  registerShareableMapping(value, handle);\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}