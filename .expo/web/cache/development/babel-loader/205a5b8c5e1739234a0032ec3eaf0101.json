{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"./reanimated2/layoutReanimation/animationsManager\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nimport { configureLayoutAnimations, enableLayoutAnimations, runOnUI, startMapper, stopMapper } from \"./reanimated2/core\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from \"./reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"./reanimated2/animation\";\nimport { DefaultSharedTransition, LayoutAnimationType } from \"./reanimated2/layoutReanimation\";\nimport { makeViewDescriptorsSet } from \"./reanimated2/ViewDescriptorsSet\";\nimport { getShadowNodeWrapperFromRef } from \"./reanimated2/fabricUtils\";\nimport updateProps from \"./reanimated2/UpdateProps\";\nimport NativeReanimatedModule from \"./reanimated2/NativeReanimated\";\nimport { isSharedValue } from \"./reanimated2\";\n\nfunction dummyListener() {}\n\nfunction maybeBuild(layoutAnimationOrBuilder) {\n  var isAnimationBuilder = function isAnimationBuilder(value) {\n    return 'build' in layoutAnimationOrBuilder && typeof layoutAnimationOrBuilder.build === 'function';\n  };\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n\n  var resultArr = [];\n\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n\n  _flattenArray(array);\n\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\n\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\n\nvar isSameAnimatedProps = isSameAnimatedStyle;\n\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n\n  return false;\n};\n\nfunction isInlineStyleTransform(transform) {\n  if (!transform) {\n    return false;\n  }\n\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\n\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\n\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n\n  for (var key in props) {\n    var value = props[key];\n\n    if (key === 'style') {\n      var _props$style;\n\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n\n        for (var _ref3 of Object.entries(style)) {\n          var _ref2 = _slicedToArray(_ref3, 2);\n\n          var _key2 = _ref2[0];\n          var styleValue = _ref2[1];\n\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key2] = styleValue;\n          } else if (_key2 === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key2] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nvar _worklet_10214432427375_init_data = {\n  code: \"function getInlinePropsUpdate(inlineProps) {\\n  const getInlinePropsUpdate = this._recur;\\n  const {\\n    isSharedValue\\n  } = this._closure;\\n  const update = {};\\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\\n    if (key === 'transform') {\\n      update[key] = styleValue.map(function (transform) {\\n        return getInlinePropsUpdate(transform);\\n      });\\n    } else if (isSharedValue(styleValue)) {\\n      update[key] = styleValue.value;\\n    } else {\\n      update[key] = styleValue;\\n    }\\n  }\\n  return update;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getInlinePropsUpdate\\\",\\\"inlineProps\\\",\\\"_recur\\\",\\\"isSharedValue\\\",\\\"_closure\\\",\\\"update\\\",\\\"key\\\",\\\"styleValue\\\",\\\"Object\\\",\\\"entries\\\",\\\"map\\\",\\\"transform\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAqHA,SAAAA,oBAASA,CAAqBC,WAAA,EAAW;EAAA,MAAAD,oBAAA,QAAAE,MAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvC,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,MAAM,CAACC,GAAG,EAAEC,UAAU,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,EAAE;IAC3D,IAAIK,GAAG,KAAK,WAAW,EAAE;MACvBD,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU,CAACG,GAAG,CAAC,UAAAC,SAAS,EAAI;QACxC,OAAOX,oBAAoB,CAACW,SAAS,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIR,aAAa,CAACI,UAAU,CAAC,EAAE;MACpCF,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU,CAACK,KAAK;IAChC,CAAC,MAAM;MACLP,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU;IAC1B;EACF;EACA,OAAOF,MAAM;AACf\\\"}\"\n};\n\nvar getInlinePropsUpdate = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(inlineProps) {\n    var update = {};\n\n    for (var _ref6 of Object.entries(inlineProps)) {\n      var _ref5 = _slicedToArray(_ref6, 2);\n\n      var key = _ref5[0];\n      var styleValue = _ref5[1];\n\n      if (key === 'transform') {\n        update[key] = styleValue.map(function (transform) {\n          return getInlinePropsUpdate(transform);\n        });\n      } else if (isSharedValue(styleValue)) {\n        update[key] = styleValue.value;\n      } else {\n        update[key] = styleValue;\n      }\n    }\n\n    return update;\n  };\n\n  _f._closure = {\n    isSharedValue: isSharedValue\n  };\n  _f.__initData = _worklet_10214432427375_init_data;\n  _f.__workletHash = 10214432427375;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_13635933857374_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    viewTag\\n  } = this._closure;\\n  _removeShadowNodeFromRegistry(viewTag);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewTag\\\",\\\"_closure\\\",\\\"_removeShadowNodeFromRegistry\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAsPkB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACZC,6BAA6B,CAACF,OAAO,CAAC;AACxC\\\"}\"\n};\nvar _worklet_3330813578186_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    getInlinePropsUpdate,\\n    newInlineProps,\\n    updateProps,\\n    sharableViewDescriptors,\\n    maybeViewRef\\n  } = this._closure;\\n  const update = getInlinePropsUpdate(newInlineProps);\\n  updateProps(sharableViewDescriptors, update, maybeViewRef);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"getInlinePropsUpdate\\\",\\\"newInlineProps\\\",\\\"updateProps\\\",\\\"sharableViewDescriptors\\\",\\\"maybeViewRef\\\",\\\"_closure\\\",\\\"update\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAwagC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,oBAAA;IAAAC,cAAA;IAAAC,WAAA;IAAAC,uBAAA;IAAAC;EAAA,SAAAC,QAAA;EAG5B,MAAMC,MAAM,GAAGN,oBAAoB,CAACC,cAAc,CAAC;EACnDC,WAAW,CAACC,uBAAuB,EAAEG,MAAM,EAAEF,YAAY,CAAC;AAC5D\\\"}\"\n};\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n\n    var _super = _createSuper(AnimatedComponent);\n\n    function AnimatedComponent(props) {\n      var _this;\n\n      _classCallCheck(this, AnimatedComponent);\n\n      _this = _super.call(this, props);\n\n      _defineProperty(_assertThisInitialized(_this), \"_styles\", null);\n\n      _defineProperty(_assertThisInitialized(_this), \"_animatedProps\", void 0);\n\n      _defineProperty(_assertThisInitialized(_this), \"_viewTag\", -1);\n\n      _defineProperty(_assertThisInitialized(_this), \"_isFirstRender\", true);\n\n      _defineProperty(_assertThisInitialized(_this), \"animatedStyle\", {\n        value: {}\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"initialStyle\", {});\n\n      _defineProperty(_assertThisInitialized(_this), \"_component\", null);\n\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsViewDescriptors\", null);\n\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsMapperId\", null);\n\n      _defineProperty(_assertThisInitialized(_this), \"_inlineProps\", {});\n\n      _defineProperty(_assertThisInitialized(_this), \"_setComponentRef\", setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          var _this$props = _this.props,\n              layout = _this$props.layout,\n              entering = _this$props.entering,\n              exiting = _this$props.exiting,\n              sharedTransitionTag = _this$props.sharedTransitionTag;\n\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n\n            if (layout) {\n              configureLayoutAnimations(tag, LayoutAnimationType.LAYOUT, maybeBuild(layout));\n            }\n\n            if (entering) {\n              configureLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering));\n            }\n\n            if (exiting) {\n              configureLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting));\n            }\n\n            if (sharedTransitionTag) {\n              var _this$props$sharedTra;\n\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : DefaultSharedTransition;\n              configureLayoutAnimations(tag, LayoutAnimationType.SHARED_ELEMENT_TRANSITION, maybeBuild(sharedElementTransition), sharedTransitionTag);\n            }\n          }\n\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n\n      return _this;\n    }\n\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachNativeEvents();\n\n        this._detachStyles();\n\n        this._detachInlineProps();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n\n        this._attachAnimatedStyles();\n\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component;\n\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n\n        var viewTag = null;\n\n        for (var key in this.props) {\n          var prop = this.props[key];\n\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === null) {\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style !== null && style !== void 0 && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n\n          for (var _style2 of this._styles) {\n            _style2.viewDescriptors.remove(this._viewTag);\n          }\n\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n\n          if (global._IS_FABRIC) {\n            var viewTag = this._viewTag;\n            runOnUI(function () {\n              var _e = [new global.Error(), -2, -27];\n\n              var _f = function _f() {\n                _removeShadowNodeFromRegistry(viewTag);\n              };\n\n              _f._closure = {\n                viewTag: viewTag\n              };\n              _f.__initData = _worklet_13635933857374_init_data;\n              _f.__workletHash = 13635933857374;\n              _f.__stackDetails = _e;\n              _f.__version = \"3.3.0\";\n              return _f;\n            }())();\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n\n        var viewTag = null;\n\n        for (var _key4 in this.props) {\n          var _prop = this.props[_key4];\n\n          if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n\n            _prop.current.registerForEvents(viewTag, _key4);\n\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3;\n\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? this._component.getAnimatableRef() : this;\n\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(component);\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n\n          if (global._IS_FABRIC) {\n            shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n          }\n        }\n\n        return {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n\n        var _this$props$animatedP2, _this$props$animatedP3;\n\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n\n        var _this$_getViewInfo = this._getViewInfo(),\n            viewTag = _this$_getViewInfo.viewTag,\n            viewName = _this$_getViewInfo.viewName,\n            shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n            viewConfig = _this$_getViewInfo.viewConfig;\n\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._viewTag = viewTag;\n\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n\n          if (isJest()) {\n            _this2.animatedStyle.value = _objectSpread(_objectSpread({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"_attachInlineProps\",\n      value: function _attachInlineProps() {\n        var newInlineProps = extractSharedValuesMapFromProps(this.props);\n        var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n        if (hasChanged) {\n          if (!this._inlinePropsViewDescriptors) {\n            this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n            var _this$_getViewInfo2 = this._getViewInfo(),\n                viewTag = _this$_getViewInfo2.viewTag,\n                viewName = _this$_getViewInfo2.viewName,\n                shadowNodeWrapper = _this$_getViewInfo2.shadowNodeWrapper,\n                viewConfig = _this$_getViewInfo2.viewConfig;\n\n            if (Object.keys(newInlineProps).length && viewConfig) {\n              adaptViewConfig(viewConfig);\n            }\n\n            this._inlinePropsViewDescriptors.add({\n              tag: viewTag,\n              name: viewName,\n              shadowNodeWrapper: shadowNodeWrapper\n            });\n          }\n\n          var sharableViewDescriptors = this._inlinePropsViewDescriptors.sharableViewDescriptors;\n          var maybeViewRef = NativeReanimatedModule.native ? undefined : {\n            items: new Set([this])\n          };\n\n          var updaterFunction = function () {\n            var _e = [new global.Error(), -6, -27];\n\n            var _f = function _f() {\n              var update = getInlinePropsUpdate(newInlineProps);\n              updateProps(sharableViewDescriptors, update, maybeViewRef);\n            };\n\n            _f._closure = {\n              getInlinePropsUpdate: getInlinePropsUpdate,\n              newInlineProps: newInlineProps,\n              updateProps: updateProps,\n              sharableViewDescriptors: sharableViewDescriptors,\n              maybeViewRef: maybeViewRef\n            };\n            _f.__initData = _worklet_3330813578186_init_data;\n            _f.__workletHash = 3330813578186;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }();\n\n          this._inlineProps = newInlineProps;\n\n          if (this._inlinePropsMapperId) {\n            stopMapper(this._inlinePropsMapperId);\n          }\n\n          this._inlinePropsMapperId = null;\n\n          if (Object.keys(newInlineProps).length) {\n            this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n          }\n        }\n      }\n    }, {\n      key: \"_detachInlineProps\",\n      value: function _detachInlineProps() {\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._reattachNativeEvents(prevProps);\n\n        this._attachAnimatedStyles();\n\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n\n        var props = {};\n\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp != null ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = _objectSpread(_objectSpread({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                }\n\n                return _this3.initialStyle;\n              } else if (hasInlineStyles(style)) {\n                if (_this3._isFirstRender) {\n                  return getInlinePropsUpdate(style);\n                }\n\n                var newStyle = {};\n\n                for (var _ref9 of Object.entries(style)) {\n                  var _ref8 = _slicedToArray(_ref9, 2);\n\n                  var _key6 = _ref8[0];\n                  var styleValue = _ref8[1];\n\n                  if (!isSharedValue(styleValue) && !(_key6 === 'transform' && isInlineStyleTransform(styleValue))) {\n                    newStyle[_key6] = styleValue;\n                  }\n                }\n\n                return newStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = StyleSheet.flatten(processedStyle);\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _animatedProp$initial, _animatedProp$viewsRe;\n\n                props[key] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[key];\n                (_animatedProp$viewsRe = animatedProp.viewsRef) === null || _animatedProp$viewsRe === void 0 ? void 0 : _animatedProp$viewsRe.add(_this3);\n              });\n            }\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (isSharedValue(value)) {\n            if (_this3._isFirstRender) {\n              props[key] = value.value;\n            }\n          } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n            props[key] = value;\n          }\n        };\n\n        for (var key in inputProps) {\n          _loop2();\n        }\n\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n\n    return AnimatedComponent;\n  }(React.Component);\n\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"sources":["createAnimatedComponent.tsx"],"names":["React","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","configureLayoutAnimations","enableLayoutAnimations","runOnUI","startMapper","stopMapper","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","DefaultSharedTransition","LayoutAnimationType","makeViewDescriptorsSet","getShadowNodeWrapperFromRef","updateProps","NativeReanimatedModule","isSharedValue","dummyListener","maybeBuild","layoutAnimationOrBuilder","isAnimationBuilder","value","build","flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","key","x","undefined","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","styleValue","extractSharedValuesMapFromProps","props","inlineProps","entries","inlinePropsHasChanged","styles1","styles2","length","getInlinePropsUpdate","update","map","createAnimatedComponent","Component","options","prototype","isReactComponent","name","AnimatedComponent","_defineProperty","constructor","animatedStyle","componentWillUnmount","_detachNativeEvents","_detachStyles","_detachInlineProps","componentDidMount","_attachNativeEvents","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","_component","getScrollableNode","node","viewTag","prop","current","findNodeHandle","setNativeProps","registerForEvents","unregisterFromEvents","Platform","OS","_styles","remove","_viewTag","animatedProps","global","_IS_FABRIC","_removeShadowNodeFromRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_getViewInfo","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","prevStyles","prevAnimatedProps","_animatedProps","hasReanimated2Props","hasOneSameStyle","prevStyle","isPresent","add","tag","initial","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","sharableViewDescriptors","maybeViewRef","native","items","Set","updaterFunction","_inlinePropsMapperId","values","componentDidUpdate","getForwardedRef","forwardedRef","setLocalRef","ref","layout","entering","exiting","sharedTransitionTag","LAYOUT","ENTERING","EXITING","sharedElementTransition","sharedTransitionStyle","SHARED_ELEMENT_TRANSITION","_filterNonAnimatedProps","inputProps","styleProp","processedStyle","_isFirstRender","initialStyle","updater","newStyle","StyleSheet","flatten","animatedProp","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","_setComponentRef","displayName","forwardRef"],"mappings":"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","sourcesContent":["import React, { Component, ComponentType, MutableRefObject, Ref } from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  runOnUI,\n  startMapper,\n  stopMapper,\n} from './reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n} from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport {\n  BaseAnimationBuilder,\n  DefaultSharedTransition,\n  EntryExitAnimationFunction,\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './reanimated2/layoutReanimation';\nimport {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from './reanimated2/commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from './reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from './reanimated2/fabricUtils';\nimport updateProps from './reanimated2/UpdateProps';\nimport NativeReanimatedModule from './reanimated2/NativeReanimated';\nimport { isSharedValue } from './reanimated2';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\ntype NestedArray<T> = T | NestedArray<T>[];\nfunction flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nconst has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ninterface AnimatedProps extends Record<string, unknown> {\n  viewDescriptors?: ViewDescriptorsSet;\n  viewsRef?: ViewRefSet<unknown>;\n  initial?: SharedValue<StyleProps>;\n}\n\nexport type AnimatedComponentProps<P extends Record<string, unknown>> = P & {\n  forwardedRef?: Ref<Component>;\n  style?: NestedArray<StyleProps>;\n  animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n  animatedStyle?: StyleProps;\n  layout?:\n    | BaseAnimationBuilder\n    | ILayoutAnimationBuilder\n    | typeof BaseAnimationBuilder;\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  sharedTransitionTag?: string;\n  sharedTransitionStyle?: ILayoutAnimationBuilder;\n};\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n  getAnimatableRef?: () => ComponentRef;\n}\n\nexport interface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): ComponentType<AnimatedComponentProps<InitialComponentProps>> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._detachStyles();\n      this._detachInlineProps();\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          const viewTag = this._viewTag;\n          runOnUI(() => {\n            _removeShadowNodeFromRegistry!(viewTag);\n          })();\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef();\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component!, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = this._component?.getAnimatableRef\n        ? this._component.getAnimatableRef()\n        : this;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(component);\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n        const tag = findNodeHandle(ref);\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(layout)\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(entering)\n            );\n          }\n          if (exiting) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.EXITING,\n              maybeBuild(exiting)\n            );\n          }\n          if (sharedTransitionTag) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? DefaultSharedTransition;\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.SHARED_ELEMENT_TRANSITION,\n              maybeBuild(sharedElementTransition),\n              sharedTransitionTag\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}