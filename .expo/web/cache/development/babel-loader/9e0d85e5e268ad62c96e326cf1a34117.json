{"ast":null,"code":"import NativeReanimatedModule from \"./NativeReanimated\";\nimport { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive, registerShareableMapping } from \"./shareables\";\nimport { runOnUI } from \"./threads\";\nimport { valueSetter } from \"./valueSetter\";\nexport { stopMapper } from \"./mappers\";\nvar _worklet_4824026427666_init_data = {\n  code: \"function makeUIMutable(initial, syncDataHolder) {\\n  const {\\n    valueSetter,\\n    makeShareableCloneOnUIRecursive\\n  } = this._closure;\\n  const listeners = new Map();\\n  let value = initial;\\n  const self = {\\n    set value(newValue) {\\n      valueSetter(self, newValue);\\n    },\\n    get value() {\\n      return value;\\n    },\\n    set _value(newValue) {\\n      value = newValue;\\n      if (syncDataHolder) {\\n        _updateDataSynchronously(syncDataHolder, makeShareableCloneOnUIRecursive(newValue));\\n      }\\n      listeners.forEach(function (listener) {\\n        listener(newValue);\\n      });\\n    },\\n    get _value() {\\n      return value;\\n    },\\n    addListener: function (id, listener) {\\n      listeners.set(id, listener);\\n    },\\n    removeListener: function (id) {\\n      listeners.delete(id);\\n    },\\n    _animation: null,\\n    _isReanimatedSharedValue: true\\n  };\\n  return self;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"makeUIMutable\\\",\\\"initial\\\",\\\"syncDataHolder\\\",\\\"valueSetter\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"_closure\\\",\\\"listeners\\\",\\\"Map\\\",\\\"value\\\",\\\"self\\\",\\\"newValue\\\",\\\"_value\\\",\\\"_updateDataSynchronously\\\",\\\"forEach\\\",\\\"listener\\\",\\\"addListener\\\",\\\"id\\\",\\\"set\\\",\\\"removeListener\\\",\\\"delete\\\",\\\"_animation\\\",\\\"_isReanimatedSharedValue\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAKO,SAAAA,aAASA,CAAcC,OAAA,EAAOC,cAAE,EAAc;EAAA;IAAAC,WAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnD,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC3B,IAAIC,KAAK,GAAGP,OAAO;EACnB,MAAMQ,IAAI,GAAG;IACX,IAAID,KAAKA,CAACE,QAAQ,EAAE;MAClBP,WAAW,CAACM,IAAI,EAAEC,QAAQ,CAAC;IAC7B,CAAC;IACD,IAAIF,KAAKA,CAAA,EAAG;MACV,OAAOA,KAAK;IACd,CAAC;IAOD,IAAIG,MAAMA,CAACD,QAAQ,EAAE;MACnBF,KAAK,GAAGE,QAAQ;MAChB,IAAIR,cAAc,EAAE;QAClBU,wBAAwB,CAACV,cAAc,EAAEE,+BAA+B,CAACM,QAAQ,CAAC,CAAC;MACrF;MACAJ,SAAS,CAACO,OAAO,CAAC,UAAAC,QAAQ,EAAI;QAC5BA,QAAQ,CAACJ,QAAQ,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACD,IAAIC,MAAMA,CAAA,EAAG;MACX,OAAOH,KAAK;IACd,CAAC;IACDO,WAAW,EAAE,SAAAA,CAACC,EAAE,EAAEF,QAAQ,EAAK;MAC7BR,SAAS,CAACW,GAAG,CAACD,EAAE,EAAEF,QAAQ,CAAC;IAC7B,CAAC;IACDI,cAAc,EAAE,SAAAA,CAAAF,EAAE,EAAI;MACpBV,SAAS,CAACa,MAAM,CAACH,EAAE,CAAC;IACtB,CAAC;IACDI,UAAU,EAAE,IAAI;IAChBC,wBAAwB,EAAE;EAC5B,CAAC;EACD,OAAOZ,IAAI;AACb\\\"}\"\n};\nexport var makeUIMutable = function () {\n  var _e = [new global.Error(), -3, -27];\n\n  var _f = function _f(initial, syncDataHolder) {\n    var listeners = new Map();\n    var value = initial;\n    var self = {\n      set value(newValue) {\n        valueSetter(self, newValue);\n      },\n\n      get value() {\n        return value;\n      },\n\n      set _value(newValue) {\n        value = newValue;\n\n        if (syncDataHolder) {\n          _updateDataSynchronously(syncDataHolder, makeShareableCloneOnUIRecursive(newValue));\n        }\n\n        listeners.forEach(function (listener) {\n          listener(newValue);\n        });\n      },\n\n      get _value() {\n        return value;\n      },\n\n      addListener: function addListener(id, listener) {\n        listeners.set(id, listener);\n      },\n      removeListener: function removeListener(id) {\n        listeners.delete(id);\n      },\n      _animation: null,\n      _isReanimatedSharedValue: true\n    };\n    return self;\n  };\n\n  _f._closure = {\n    valueSetter: valueSetter,\n    makeShareableCloneOnUIRecursive: makeShareableCloneOnUIRecursive\n  };\n  _f.__initData = _worklet_4824026427666_init_data;\n  _f.__workletHash = 4824026427666;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_10449958264388_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    makeUIMutable,\\n    initial,\\n    syncDataHolder\\n  } = this._closure;\\n  return makeUIMutable(initial, syncDataHolder);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"makeUIMutable\\\",\\\"initial\\\",\\\"syncDataHolder\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAwDY,SAAAA,SAAMA,CAAA;EAAA;IAAAC,aAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,OAAOH,aAAa,CAACC,OAAO,EAAEC,cAAc,CAAC;AAC/C\\\"}\"\n};\nvar _worklet_15438208032637_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    mutable,\\n    newValue\\n  } = this._closure;\\n  mutable.value = newValue;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"mutable\\\",\\\"newValue\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAmEgB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACZF,OAAO,CAACG,KAAK,GAAGF,QAAQ;AAC1B\\\"}\"\n};\nvar _worklet_12569920825823_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    mutable,\\n    modifier\\n  } = this._closure;\\n  mutable.value = modifier(mutable.value);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"mutable\\\",\\\"modifier\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAgGc,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACZF,OAAO,CAACG,KAAK,GAAGF,QAAQ,CAACD,OAAO,CAACG,KAAK,CAAC;AACzC\\\"}\"\n};\nexport function makeMutable(initial) {\n  var oneWayReadsOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var value = initial;\n  var syncDataHolder;\n\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(makeShareableCloneRecursive(value));\n    registerShareableMapping(syncDataHolder);\n  }\n\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -4, -27];\n\n      var _f = function _f() {\n        return makeUIMutable(initial, syncDataHolder);\n      };\n\n      _f._closure = {\n        makeUIMutable: makeUIMutable,\n        initial: initial,\n        syncDataHolder: syncDataHolder\n      };\n      _f.__initData = _worklet_10449958264388_init_data;\n      _f.__workletHash = 10449958264388;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()\n  });\n  var listeners = NativeReanimatedModule.native ? undefined : new Map();\n  var mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(function () {\n          var _e = [new global.Error(), -3, -27];\n\n          var _f = function _f() {\n            mutable.value = newValue;\n          };\n\n          _f._closure = {\n            mutable: mutable,\n            newValue: newValue\n          };\n          _f.__initData = _worklet_15438208032637_init_data;\n          _f.__workletHash = 15438208032637;\n          _f.__stackDetails = _e;\n          _f.__version = \"3.3.0\";\n          return _f;\n        }())();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n\n      return value;\n    },\n\n    set _value(newValue) {\n      if (NativeReanimatedModule.native) {\n        throw new Error('Setting `_value` directly is only possible on the UI runtime');\n      }\n\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n\n    get _value() {\n      if (NativeReanimatedModule.native) {\n        throw new Error('Reading from `_value` directly is only possible on the UI runtime');\n      }\n\n      return value;\n    },\n\n    modify: function modify(modifier) {\n      runOnUI(function () {\n        var _e = [new global.Error(), -3, -27];\n\n        var _f = function _f() {\n          mutable.value = modifier(mutable.value);\n        };\n\n        _f._closure = {\n          mutable: mutable,\n          modifier: modifier\n        };\n        _f.__initData = _worklet_12569920825823_init_data;\n        _f.__workletHash = 12569920825823;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }())();\n    },\n    addListener: function addListener(id, listener) {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      if (NativeReanimatedModule.native) {\n        throw new Error('removing listeners is only possible on the UI runtime');\n      }\n\n      listeners.delete(id);\n    },\n    _isReanimatedSharedValue: true\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\nvar _worklet_17100414353033_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    initial\\n  } = this._closure;\\n  return initial;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"initial\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"],\\\"mappings\\\":\\\"AAwHY,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGZ,OAAOD,OAAO;AAChB\\\"}\"\n};\nexport function makeRemote() {\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -2, -27];\n\n      var _f = function _f() {\n        return initial;\n      };\n\n      _f._closure = {\n        initial: initial\n      };\n      _f.__initData = _worklet_17100414353033_init_data;\n      _f.__workletHash = 17100414353033;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}","map":{"version":3,"sources":["mutables.ts"],"names":["NativeReanimatedModule","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","registerShareableMapping","runOnUI","valueSetter","stopMapper","makeUIMutable","initial","syncDataHolder","listeners","Map","value","self","newValue","_value","_updateDataSynchronously","forEach","listener","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","makeMutable","oneWayReadsOnly","native","makeSynchronizedDataHolder","handle","__init","undefined","mutable","getDataSynchronously","Error","modify","modifier","makeRemote"],"mappings":"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","sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\nexport { stopMapper } from './mappers';\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = NativeReanimatedModule.native ? undefined : new Map();\n  const mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Setting `_value` directly is only possible on the UI runtime'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Reading from `_value` directly is only possible on the UI runtime'\n        );\n      }\n      return value;\n    },\n    modify: (modifier: (value: T) => T) => {\n      runOnUI(() => {\n        mutable.value = modifier(mutable.value);\n      })();\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'removing listeners is only possible on the UI runtime'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"]},"metadata":{},"sourceType":"module"}