{"ast":null,"code":"import { hsvToColor, RGBtoHSV, rgbaColor, processColor, red, green, blue, opacity } from \"./Colors\";\nimport { makeMutable } from \"./core\";\nimport { interpolate } from \"./interpolation\";\nimport { useSharedValue } from \"./hook/useSharedValue\";\nexport var Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity'\n};\nvar _worklet_6906798994928_init_data = {\n  code: \"function anonymous(value, inputRange, colors, options) {\\n  const {\\n    interpolate,\\n    Extrapolate,\\n    hsvToColor\\n  } = this._closure;\\n  let h = 0;\\n  const {\\n    useCorrectedHSVInterpolation = true\\n  } = options;\\n  if (useCorrectedHSVInterpolation) {\\n    const correctedInputRange = [inputRange[0]];\\n    const originalH = colors.h;\\n    const correctedH = [originalH[0]];\\n    for (let i = 1; i < originalH.length; ++i) {\\n      const d = originalH[i] - originalH[i - 1];\\n      if (originalH[i] > originalH[i - 1] && d > 0.5) {\\n        correctedInputRange.push(inputRange[i]);\\n        correctedInputRange.push(inputRange[i] + 0.00001);\\n        correctedH.push(originalH[i] - 1);\\n        correctedH.push(originalH[i]);\\n      } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\\n        correctedInputRange.push(inputRange[i]);\\n        correctedInputRange.push(inputRange[i] + 0.00001);\\n        correctedH.push(originalH[i] + 1);\\n        correctedH.push(originalH[i]);\\n      } else {\\n        correctedInputRange.push(inputRange[i]);\\n        correctedH.push(originalH[i]);\\n      }\\n    }\\n    h = (interpolate(value, correctedInputRange, correctedH, Extrapolate.CLAMP) + 1) % 1;\\n  } else {\\n    h = interpolate(value, inputRange, colors.h, Extrapolate.CLAMP);\\n  }\\n  const s = interpolate(value, inputRange, colors.s, Extrapolate.CLAMP);\\n  const v = interpolate(value, inputRange, colors.v, Extrapolate.CLAMP);\\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\\n  return hsvToColor(h, s, v, a);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"interpolate\\\",\\\"Extrapolate\\\",\\\"hsvToColor\\\",\\\"_closure\\\",\\\"h\\\",\\\"useCorrectedHSVInterpolation\\\",\\\"correctedInputRange\\\",\\\"originalH\\\",\\\"correctedH\\\",\\\"i\\\",\\\"length\\\",\\\"d\\\",\\\"push\\\",\\\"CLAMP\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAS6B,SAACA,SAAOA,CAAAC,KAAA,EAAAC,UAAkB,EAAEC,MAAA,EAAOC,OAAK;EAAA;IAAAC,WAAA;IAAAC,WAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnE,IAAIC,CAAC,GAAG,CAAC;EACT,MAAM;IACJC,4BAA4B,GAAG;EACjC,CAAC,GAAGN,OAAO;EACX,IAAIM,4BAA4B,EAAE;IAKhC,MAAMC,mBAAmB,GAAG,CAACT,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMU,SAAS,GAAGT,MAAM,CAACM,CAAC;IAC1B,MAAMI,UAAU,GAAG,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;IACjC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAE,EAAED,CAAC,EAAE;MACzC,MAAME,CAAC,GAAGJ,SAAS,CAACE,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC;MACzC,IAAIF,SAAS,CAACE,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAG,GAAG,EAAE;QAC9CL,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC;QACvCH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,GAAG,OAAO,CAAC;QACjDD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC;QACjCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIF,SAAS,CAACE,CAAC,CAAC,GAAGF,SAAS,CAACE,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAG,CAAC,GAAG,EAAE;QACtDL,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC;QACvCH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,GAAG,OAAO,CAAC;QACjDD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC;QACjCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLH,mBAAmB,CAACM,IAAI,CAACf,UAAU,CAACY,CAAC,CAAC,CAAC;QACvCD,UAAU,CAACI,IAAI,CAACL,SAAS,CAACE,CAAC,CAAC,CAAC;MAC/B;IACF;IACAL,CAAC,GAAG,CAACJ,WAAW,CAACJ,KAAK,EAAEU,mBAAmB,EAAEE,UAAU,EAAEP,WAAW,CAACY,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;EACtF,CAAC,MAAM;IACLT,CAAC,GAAGJ,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACM,CAAC,EAAEH,WAAW,CAACY,KAAK,CAAC;EACjE;EACA,MAAMC,CAAC,GAAGd,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACgB,CAAC,EAAEb,WAAW,CAACY,KAAK,CAAC;EACrE,MAAME,CAAC,GAAGf,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACiB,CAAC,EAAEd,WAAW,CAACY,KAAK,CAAC;EACrE,MAAMG,CAAC,GAAGhB,WAAW,CAACJ,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACkB,CAAC,EAAEf,WAAW,CAACY,KAAK,CAAC;EACrE,OAAOX,UAAU,CAACE,CAAC,EAAEU,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AAC/B\\\"}\"\n};\n\nvar interpolateColorsHSV = function () {\n  var _e = [new global.Error(), -4, -27];\n\n  var _f = function _f(value, inputRange, colors, options) {\n    var h = 0;\n    var _options$useCorrected = options.useCorrectedHSVInterpolation,\n        useCorrectedHSVInterpolation = _options$useCorrected === void 0 ? true : _options$useCorrected;\n\n    if (useCorrectedHSVInterpolation) {\n      var correctedInputRange = [inputRange[0]];\n      var originalH = colors.h;\n      var correctedH = [originalH[0]];\n\n      for (var i = 1; i < originalH.length; ++i) {\n        var d = originalH[i] - originalH[i - 1];\n\n        if (originalH[i] > originalH[i - 1] && d > 0.5) {\n          correctedInputRange.push(inputRange[i]);\n          correctedInputRange.push(inputRange[i] + 0.00001);\n          correctedH.push(originalH[i] - 1);\n          correctedH.push(originalH[i]);\n        } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n          correctedInputRange.push(inputRange[i]);\n          correctedInputRange.push(inputRange[i] + 0.00001);\n          correctedH.push(originalH[i] + 1);\n          correctedH.push(originalH[i]);\n        } else {\n          correctedInputRange.push(inputRange[i]);\n          correctedH.push(originalH[i]);\n        }\n      }\n\n      h = (interpolate(value, correctedInputRange, correctedH, Extrapolate.CLAMP) + 1) % 1;\n    } else {\n      h = interpolate(value, inputRange, colors.h, Extrapolate.CLAMP);\n    }\n\n    var s = interpolate(value, inputRange, colors.s, Extrapolate.CLAMP);\n    var v = interpolate(value, inputRange, colors.v, Extrapolate.CLAMP);\n    var a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\n    return hsvToColor(h, s, v, a);\n  };\n\n  _f._closure = {\n    interpolate: interpolate,\n    Extrapolate: Extrapolate,\n    hsvToColor: hsvToColor\n  };\n  _f.__initData = _worklet_6906798994928_init_data;\n  _f.__workletHash = 6906798994928;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_11271606745997_init_data = {\n  code: \"function anonymous(x, gamma) {\\n  return x.map(function (v) {\\n    return Math.pow(v / 255, gamma);\\n  });\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"x\\\",\\\"gamma\\\",\\\"map\\\",\\\"v\\\",\\\"Math\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAkDsB,SAACA,SAAGA,CAAKC,CAAA,EAAKC,KAAA;EAGlC,OAAOD,CAAC,CAACE,GAAG,CAAC,UAAAC,CAAC;IAAA,OAAIC,IAAI,CAACC,GAAG,CAACF,CAAC,GAAG,GAAG,EAAEF,KAAK,CAAC;EAAA,EAAC;AAC7C\\\"}\"\n};\n\nvar toLinearSpace = function () {\n  var _e = [new global.Error(), 1, -27];\n\n  var _f = function _f(x, gamma) {\n    return x.map(function (v) {\n      return Math.pow(v / 255, gamma);\n    });\n  };\n\n  _f._closure = {};\n  _f.__initData = _worklet_11271606745997_init_data;\n  _f.__workletHash = 11271606745997;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_3404264460492_init_data = {\n  code: \"function anonymous(x, gamma) {\\n  return Math.round(Math.pow(x, 1 / gamma) * 255);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"x\\\",\\\"gamma\\\",\\\"Math\\\",\\\"round\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAuDqB,SAACA,SAAGA,CAAKC,CAAA,EAAKC,KAAA;EAGjC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,EAAE,CAAC,GAAGC,KAAK,CAAC,GAAG,GAAG,CAAC;AACjD\\\"}\"\n};\n\nvar toGammaSpace = function () {\n  var _e = [new global.Error(), 1, -27];\n\n  var _f = function _f(x, gamma) {\n    return Math.round(Math.pow(x, 1 / gamma) * 255);\n  };\n\n  _f._closure = {};\n  _f.__initData = _worklet_3404264460492_init_data;\n  _f.__workletHash = 3404264460492;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_5547345126831_init_data = {\n  code: \"function anonymous(value, inputRange, colors, options) {\\n  const {\\n    toLinearSpace,\\n    interpolate,\\n    Extrapolate,\\n    rgbaColor,\\n    toGammaSpace\\n  } = this._closure;\\n  const {\\n    gamma = 2.2\\n  } = options;\\n  let {\\n    r: outputR,\\n    g: outputG,\\n    b: outputB\\n  } = colors;\\n  if (gamma !== 1) {\\n    outputR = toLinearSpace(outputR, gamma);\\n    outputG = toLinearSpace(outputG, gamma);\\n    outputB = toLinearSpace(outputB, gamma);\\n  }\\n  const r = interpolate(value, inputRange, outputR, Extrapolate.CLAMP);\\n  const g = interpolate(value, inputRange, outputG, Extrapolate.CLAMP);\\n  const b = interpolate(value, inputRange, outputB, Extrapolate.CLAMP);\\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\\n  if (gamma === 1) {\\n    return rgbaColor(r, g, b, a);\\n  }\\n  return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"toLinearSpace\\\",\\\"interpolate\\\",\\\"Extrapolate\\\",\\\"rgbaColor\\\",\\\"toGammaSpace\\\",\\\"_closure\\\",\\\"gamma\\\",\\\"r\\\",\\\"outputR\\\",\\\"g\\\",\\\"outputG\\\",\\\"b\\\",\\\"outputB\\\",\\\"CLAMP\\\",\\\"a\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA4D6B,SAACA,SAAOA,CAAAC,KAAA,EAAAC,UAAkB,EAAEC,MAAA,EAAOC,OAAK;EAAA;IAAAC,aAAA;IAAAC,WAAA;IAAAC,WAAA;IAAAC,SAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnE,MAAM;IACJC,KAAK,GAAG;EACV,CAAC,GAAGP,OAAO;EACX,IAAI;IACFQ,CAAC,EAAEC,OAAO;IACVC,CAAC,EAAEC,OAAO;IACVC,CAAC,EAAEC;EACL,CAAC,GAAGd,MAAM;EACV,IAAIQ,KAAK,KAAK,CAAC,EAAE;IACfE,OAAO,GAAGR,aAAa,CAACQ,OAAO,EAAEF,KAAK,CAAC;IACvCI,OAAO,GAAGV,aAAa,CAACU,OAAO,EAAEJ,KAAK,CAAC;IACvCM,OAAO,GAAGZ,aAAa,CAACY,OAAO,EAAEN,KAAK,CAAC;EACzC;EACA,MAAMC,CAAC,GAAGN,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEW,OAAO,EAAEN,WAAW,CAACW,KAAK,CAAC;EACpE,MAAMJ,CAAC,GAAGR,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEa,OAAO,EAAER,WAAW,CAACW,KAAK,CAAC;EACpE,MAAMF,CAAC,GAAGV,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEe,OAAO,EAAEV,WAAW,CAACW,KAAK,CAAC;EACpE,MAAMC,CAAC,GAAGb,WAAW,CAACL,KAAK,EAAEC,UAAU,EAAEC,MAAM,CAACgB,CAAC,EAAEZ,WAAW,CAACW,KAAK,CAAC;EACrE,IAAIP,KAAK,KAAK,CAAC,EAAE;IACf,OAAOH,SAAS,CAACI,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEG,CAAC,CAAC;EAC9B;EACA,OAAOX,SAAS,CAACC,YAAY,CAACG,CAAC,EAAED,KAAK,CAAC,EAAEF,YAAY,CAACK,CAAC,EAAEH,KAAK,CAAC,EAAEF,YAAY,CAACO,CAAC,EAAEL,KAAK,CAAC,EAAEQ,CAAC,CAAC;AAC7F\\\"}\"\n};\n\nvar interpolateColorsRGB = function () {\n  var _e = [new global.Error(), -6, -27];\n\n  var _f = function _f(value, inputRange, colors, options) {\n    var _options$gamma = options.gamma,\n        gamma = _options$gamma === void 0 ? 2.2 : _options$gamma;\n    var outputR = colors.r,\n        outputG = colors.g,\n        outputB = colors.b;\n\n    if (gamma !== 1) {\n      outputR = toLinearSpace(outputR, gamma);\n      outputG = toLinearSpace(outputG, gamma);\n      outputB = toLinearSpace(outputB, gamma);\n    }\n\n    var r = interpolate(value, inputRange, outputR, Extrapolate.CLAMP);\n    var g = interpolate(value, inputRange, outputG, Extrapolate.CLAMP);\n    var b = interpolate(value, inputRange, outputB, Extrapolate.CLAMP);\n    var a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\n\n    if (gamma === 1) {\n      return rgbaColor(r, g, b, a);\n    }\n\n    return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n  };\n\n  _f._closure = {\n    toLinearSpace: toLinearSpace,\n    interpolate: interpolate,\n    Extrapolate: Extrapolate,\n    rgbaColor: rgbaColor,\n    toGammaSpace: toGammaSpace\n  };\n  _f.__initData = _worklet_5547345126831_init_data;\n  _f.__workletHash = 5547345126831;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_1256647937052_init_data = {\n  code: \"function anonymous(colors) {\\n  const {\\n    processColor,\\n    red,\\n    green,\\n    blue,\\n    opacity\\n  } = this._closure;\\n  const r = [];\\n  const g = [];\\n  const b = [];\\n  const a = [];\\n  for (let i = 0; i < colors.length; ++i) {\\n    const color = colors[i];\\n    const processedColor = processColor(color);\\n    if (processedColor !== null && processedColor !== undefined) {\\n      r.push(red(processedColor));\\n      g.push(green(processedColor));\\n      b.push(blue(processedColor));\\n      a.push(opacity(processedColor));\\n    }\\n  }\\n  return {\\n    r: r,\\n    g: g,\\n    b: b,\\n    a: a\\n  };\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"colors\\\",\\\"processColor\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\",\\\"_closure\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"a\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"undefined\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAqF0B,SAAAA,SAAMA,CAAIC,MAAA;EAAA;IAAAC,YAAA;IAAAC,GAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlC,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,CAACY,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGb,MAAM,CAACW,CAAC,CAAC;IACvB,MAAMG,cAAc,GAAGb,YAAY,CAACY,KAAK,CAAC;IAE1C,IAAIC,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKC,SAAS,EAAE;MAC3DR,CAAC,CAACS,IAAI,CAACd,GAAG,CAACY,cAAc,CAAC,CAAC;MAC3BN,CAAC,CAACQ,IAAI,CAACb,KAAK,CAACW,cAAc,CAAC,CAAC;MAC7BL,CAAC,CAACO,IAAI,CAACZ,IAAI,CAACU,cAAc,CAAC,CAAC;MAC5BJ,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IACLP,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAA,EAAAA;EACF,CAAC;AACH\\\"}\"\n};\n\nvar getInterpolateRGB = function () {\n  var _e = [new global.Error(), -6, -27];\n\n  var _f = function _f(colors) {\n    var r = [];\n    var g = [];\n    var b = [];\n    var a = [];\n\n    for (var i = 0; i < colors.length; ++i) {\n      var color = colors[i];\n      var processedColor = processColor(color);\n\n      if (processedColor !== null && processedColor !== undefined) {\n        r.push(red(processedColor));\n        g.push(green(processedColor));\n        b.push(blue(processedColor));\n        a.push(opacity(processedColor));\n      }\n    }\n\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n\n  _f._closure = {\n    processColor: processColor,\n    red: red,\n    green: green,\n    blue: blue,\n    opacity: opacity\n  };\n  _f.__initData = _worklet_1256647937052_init_data;\n  _f.__workletHash = 1256647937052;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_4205888180392_init_data = {\n  code: \"function anonymous(colors) {\\n  const {\\n    processColor,\\n    RGBtoHSV,\\n    red,\\n    green,\\n    blue,\\n    opacity\\n  } = this._closure;\\n  const h = [];\\n  const s = [];\\n  const v = [];\\n  const a = [];\\n  for (let i = 0; i < colors.length; ++i) {\\n    const color = colors[i];\\n    const processedColor = processColor(color);\\n    if (typeof processedColor === 'number') {\\n      const processedHSVColor = RGBtoHSV(red(processedColor), green(processedColor), blue(processedColor));\\n      h.push(processedHSVColor.h);\\n      s.push(processedHSVColor.s);\\n      v.push(processedHSVColor.v);\\n      a.push(opacity(processedColor));\\n    }\\n  }\\n  return {\\n    h: h,\\n    s: s,\\n    v: v,\\n    a: a\\n  };\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"colors\\\",\\\"processColor\\\",\\\"RGBtoHSV\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\",\\\"_closure\\\",\\\"h\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"processedHSVColor\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA8G0B,SAAAA,SAAMA,CAAIC,MAAA;EAAA;IAAAC,YAAA;IAAAC,QAAA;IAAAC,GAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlC,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,MAAM,CAACa,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGd,MAAM,CAACY,CAAC,CAAC;IACvB,MAAMG,cAAc,GAAGd,YAAY,CAACa,KAAK,CAAC;IAC1C,IAAI,OAAOC,cAAc,KAAK,QAAQ,EAAE;MACtC,MAAMC,iBAAiB,GAAGd,QAAQ,CAACC,GAAG,CAACY,cAAc,CAAC,EAAEX,KAAK,CAACW,cAAc,CAAC,EAAEV,IAAI,CAACU,cAAc,CAAC,CAAC;MACpGP,CAAC,CAACS,IAAI,CAACD,iBAAiB,CAACR,CAAC,CAAC;MAC3BC,CAAC,CAACQ,IAAI,CAACD,iBAAiB,CAACP,CAAC,CAAC;MAC3BC,CAAC,CAACO,IAAI,CAACD,iBAAiB,CAACN,CAAC,CAAC;MAC3BC,CAAC,CAACM,IAAI,CAACX,OAAO,CAACS,cAAc,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IACLP,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,CAAA,EAAAA;EACF,CAAC;AACH\\\"}\"\n};\n\nvar getInterpolateHSV = function () {\n  var _e = [new global.Error(), -7, -27];\n\n  var _f = function _f(colors) {\n    var h = [];\n    var s = [];\n    var v = [];\n    var a = [];\n\n    for (var i = 0; i < colors.length; ++i) {\n      var color = colors[i];\n      var processedColor = processColor(color);\n\n      if (typeof processedColor === 'number') {\n        var processedHSVColor = RGBtoHSV(red(processedColor), green(processedColor), blue(processedColor));\n        h.push(processedHSVColor.h);\n        s.push(processedHSVColor.s);\n        v.push(processedHSVColor.v);\n        a.push(opacity(processedColor));\n      }\n    }\n\n    return {\n      h: h,\n      s: s,\n      v: v,\n      a: a\n    };\n  };\n\n  _f._closure = {\n    processColor: processColor,\n    RGBtoHSV: RGBtoHSV,\n    red: red,\n    green: green,\n    blue: blue,\n    opacity: opacity\n  };\n  _f.__initData = _worklet_4205888180392_init_data;\n  _f.__workletHash = 4205888180392;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_11438556143388_init_data = {\n  code: \"function anonymous(value, inputRange, outputRange) {\\n  const {\\n    interpolateColorsHSV,\\n    getInterpolateHSV,\\n    interpolateColorsRGB,\\n    getInterpolateRGB\\n  } = this._closure;\\n  let colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\\n  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\\n  if (colorSpace === 'HSV') {\\n    return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\\n  } else if (colorSpace === 'RGB') {\\n    return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\\n  }\\n  throw new Error(\\\"Invalid color space provided: \\\" + colorSpace + \\\". Supported values are: ['RGB', 'HSV']\\\");\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"inputRange\\\",\\\"outputRange\\\",\\\"interpolateColorsHSV\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsRGB\\\",\\\"getInterpolateRGB\\\",\\\"_closure\\\",\\\"colorSpace\\\",\\\"arguments\\\",\\\"length\\\",\\\"undefined\\\",\\\"options\\\",\\\"Error\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAuIgC,SAAAA,SAAiBA,CAAAC,KAAA,EAAAC,UAAY,EAAAC,WAAa;EAAA;IAAAC,oBAAA;IAAAC,iBAAA;IAAAC,oBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGxE,IAAIC,UAAU,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EAC1F,IAAIG,OAAO,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAID,UAAU,KAAK,KAAK,EAAE;IACxB,OAAOL,oBAAoB,CAACH,KAAK,EAAEC,UAAU,EAAEG,iBAAiB,CAACF,WAAW,CAAC,EAAEU,OAAO,CAAC;EACzF,CAAC,MAAM,IAAIJ,UAAU,KAAK,KAAK,EAAE;IAC/B,OAAOH,oBAAoB,CAACL,KAAK,EAAEC,UAAU,EAAEK,iBAAiB,CAACJ,WAAW,CAAC,EAAEU,OAAO,CAAC;EACzF;EACA,MAAM,IAAIC,KAAK,oCAAkCL,UAAW,2CAAuC,CAAC;AACtG\\\"}\"\n};\nexport var interpolateColor = function () {\n  var _e = [new global.Error(), -5, -27];\n\n  var _f = function _f(value, inputRange, outputRange) {\n    var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (colorSpace === 'HSV') {\n      return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n    } else if (colorSpace === 'RGB') {\n      return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n    }\n\n    throw new Error(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV']`);\n  };\n\n  _f._closure = {\n    interpolateColorsHSV: interpolateColorsHSV,\n    getInterpolateHSV: getInterpolateHSV,\n    interpolateColorsRGB: interpolateColorsRGB,\n    getInterpolateRGB: getInterpolateRGB\n  };\n  _f.__initData = _worklet_11438556143388_init_data;\n  _f.__workletHash = 11438556143388;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nexport var ColorSpace = function (ColorSpace) {\n  ColorSpace[ColorSpace[\"RGB\"] = 0] = \"RGB\";\n  ColorSpace[ColorSpace[\"HSV\"] = 1] = \"HSV\";\n  return ColorSpace;\n}({});\nexport function useInterpolateConfig(inputRange, outputRange) {\n  var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return useSharedValue({\n    inputRange: inputRange,\n    outputRange: outputRange,\n    colorSpace: colorSpace,\n    cache: makeMutable(null),\n    options: options\n  });\n}\nvar _worklet_13643278367522_init_data = {\n  code: \"function anonymous(value, interpolateConfig) {\\n  const {\\n    ColorSpace,\\n    getInterpolateRGB,\\n    interpolateColorsRGB,\\n    getInterpolateHSV,\\n    interpolateColorsHSV\\n  } = this._closure;\\n  let colors = interpolateConfig.value.cache.value;\\n  if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {\\n    if (!colors) {\\n      colors = getInterpolateRGB(interpolateConfig.value.outputRange);\\n      interpolateConfig.value.cache.value = colors;\\n    }\\n    return interpolateColorsRGB(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\\n  } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {\\n    if (!colors) {\\n      colors = getInterpolateHSV(interpolateConfig.value.outputRange);\\n      interpolateConfig.value.cache.value = colors;\\n    }\\n    return interpolateColorsHSV(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\\n  }\\n  throw new Error(\\\"Invalid color space provided: \\\" + interpolateConfig.value.colorSpace + \\\". Supported values are: ['RGB', 'HSV']\\\");\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"value\\\",\\\"interpolateConfig\\\",\\\"ColorSpace\\\",\\\"getInterpolateRGB\\\",\\\"interpolateColorsRGB\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsHSV\\\",\\\"_closure\\\",\\\"colors\\\",\\\"cache\\\",\\\"colorSpace\\\",\\\"RGB\\\",\\\"outputRange\\\",\\\"inputRange\\\",\\\"options\\\",\\\"HSV\\\",\\\"Error\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAmKwC,SAACA,SAAOA,CAAAC,KAAA,EAAAC,iBAAsB;EAAA;IAAAC,UAAA;IAAAC,iBAAA;IAAAC,oBAAA;IAAAC,iBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpE,IAAIC,MAAM,GAAGP,iBAAiB,CAACD,KAAK,CAACS,KAAK,CAACT,KAAK;EAChD,IAAIC,iBAAiB,CAACD,KAAK,CAACU,UAAU,KAAKR,UAAU,CAACS,GAAG,EAAE;IACzD,IAAI,CAACH,MAAM,EAAE;MACXA,MAAM,GAAGL,iBAAiB,CAACF,iBAAiB,CAACD,KAAK,CAACY,WAAW,CAAC;MAC/DX,iBAAiB,CAACD,KAAK,CAACS,KAAK,CAACT,KAAK,GAAGQ,MAAM;IAC9C;IACA,OAAOJ,oBAAoB,CAACJ,KAAK,EAAEC,iBAAiB,CAACD,KAAK,CAACa,UAAU,EAAEL,MAAM,EAAEP,iBAAiB,CAACD,KAAK,CAACc,OAAO,CAAC;EACjH,CAAC,MAAM,IAAIb,iBAAiB,CAACD,KAAK,CAACU,UAAU,KAAKR,UAAU,CAACa,GAAG,EAAE;IAChE,IAAI,CAACP,MAAM,EAAE;MACXA,MAAM,GAAGH,iBAAiB,CAACJ,iBAAiB,CAACD,KAAK,CAACY,WAAW,CAAC;MAC/DX,iBAAiB,CAACD,KAAK,CAACS,KAAK,CAACT,KAAK,GAAGQ,MAAM;IAC9C;IACA,OAAOF,oBAAoB,CAACN,KAAK,EAAEC,iBAAiB,CAACD,KAAK,CAACa,UAAU,EAAEL,MAAM,EAAEP,iBAAiB,CAACD,KAAK,CAACc,OAAO,CAAC;EACjH;EACA,MAAM,IAAIE,KAAK,oCAAkCf,iBAAiB,CAACD,KAAK,CAACU,UAAW,2CAAuC,CAAC;AAC9H\\\"}\"\n};\nexport var interpolateSharableColor = function () {\n  var _e = [new global.Error(), -6, -27];\n\n  var _f = function _f(value, interpolateConfig) {\n    var colors = interpolateConfig.value.cache.value;\n\n    if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {\n      if (!colors) {\n        colors = getInterpolateRGB(interpolateConfig.value.outputRange);\n        interpolateConfig.value.cache.value = colors;\n      }\n\n      return interpolateColorsRGB(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\n    } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {\n      if (!colors) {\n        colors = getInterpolateHSV(interpolateConfig.value.outputRange);\n        interpolateConfig.value.cache.value = colors;\n      }\n\n      return interpolateColorsHSV(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\n    }\n\n    throw new Error(`Invalid color space provided: ${interpolateConfig.value.colorSpace}. Supported values are: ['RGB', 'HSV']`);\n  };\n\n  _f._closure = {\n    ColorSpace: ColorSpace,\n    getInterpolateRGB: getInterpolateRGB,\n    interpolateColorsRGB: interpolateColorsRGB,\n    getInterpolateHSV: getInterpolateHSV,\n    interpolateColorsHSV: interpolateColorsHSV\n  };\n  _f.__initData = _worklet_13643278367522_init_data;\n  _f.__workletHash = 13643278367522;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"sources":["interpolateColor.ts"],"names":["hsvToColor","RGBtoHSV","rgbaColor","processColor","red","green","blue","opacity","makeMutable","interpolate","useSharedValue","Extrapolate","EXTEND","CLAMP","IDENTITY","interpolateColorsHSV","value","inputRange","colors","options","h","useCorrectedHSVInterpolation","correctedInputRange","originalH","correctedH","i","length","d","push","s","v","a","toLinearSpace","x","gamma","map","Math","pow","toGammaSpace","round","interpolateColorsRGB","r","outputR","g","outputG","b","outputB","getInterpolateRGB","color","processedColor","undefined","getInterpolateHSV","processedHSVColor","interpolateColor","outputRange","colorSpace","Error","ColorSpace","useInterpolateConfig","RGB","cache","interpolateSharableColor","interpolateConfig","HSV"],"mappings":"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","sourcesContent":["import {\n  hsvToColor,\n  RGBtoHSV,\n  rgbaColor,\n  processColor,\n  red,\n  green,\n  blue,\n  opacity,\n} from './Colors';\nimport { makeMutable } from './core';\nimport { interpolate } from './interpolation';\nimport { SharedValue } from './commonTypes';\nimport { useSharedValue } from './hook/useSharedValue';\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nexport type InterpolationOptions = {\n  gamma?: number;\n  useCorrectedHSVInterpolation?: boolean;\n};\n\nconst interpolateColorsHSV = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateHSV,\n  options: InterpolationOptions\n) => {\n  'worklet';\n  let h = 0;\n  const { useCorrectedHSVInterpolation = true } = options;\n  if (useCorrectedHSVInterpolation) {\n    // if the difference between hues in a range is > 180 deg\n    // then move the hue at the right end of the range +/- 360 deg\n    // and add the next point in the original place + 0.00001 with original hue\n    // to not break the next range\n    const correctedInputRange = [inputRange[0]];\n    const originalH = colors.h;\n    const correctedH = [originalH[0]];\n\n    for (let i = 1; i < originalH.length; ++i) {\n      const d = originalH[i] - originalH[i - 1];\n      if (originalH[i] > originalH[i - 1] && d > 0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] - 1);\n        correctedH.push(originalH[i]);\n      } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] + 1);\n        correctedH.push(originalH[i]);\n      } else {\n        correctedInputRange.push(inputRange[i]);\n        correctedH.push(originalH[i]);\n      }\n    }\n    h =\n      (interpolate(value, correctedInputRange, correctedH, Extrapolate.CLAMP) +\n        1) %\n      1;\n  } else {\n    h = interpolate(value, inputRange, colors.h, Extrapolate.CLAMP);\n  }\n  const s = interpolate(value, inputRange, colors.s, Extrapolate.CLAMP);\n  const v = interpolate(value, inputRange, colors.v, Extrapolate.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\n  return hsvToColor(h, s, v, a);\n};\n\nconst toLinearSpace = (x: number[], gamma: number): number[] => {\n  'worklet';\n  return x.map((v) => Math.pow(v / 255, gamma));\n};\n\nconst toGammaSpace = (x: number, gamma: number): number => {\n  'worklet';\n  return Math.round(Math.pow(x, 1 / gamma) * 255);\n};\n\nconst interpolateColorsRGB = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateRGB,\n  options: InterpolationOptions\n) => {\n  'worklet';\n  const { gamma = 2.2 } = options;\n  let { r: outputR, g: outputG, b: outputB } = colors;\n  if (gamma !== 1) {\n    outputR = toLinearSpace(outputR, gamma);\n    outputG = toLinearSpace(outputG, gamma);\n    outputB = toLinearSpace(outputB, gamma);\n  }\n  const r = interpolate(value, inputRange, outputR, Extrapolate.CLAMP);\n  const g = interpolate(value, inputRange, outputG, Extrapolate.CLAMP);\n  const b = interpolate(value, inputRange, outputB, Extrapolate.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\n  if (gamma === 1) {\n    return rgbaColor(r, g, b, a);\n  }\n  return rgbaColor(\n    toGammaSpace(r, gamma),\n    toGammaSpace(g, gamma),\n    toGammaSpace(b, gamma),\n    a\n  );\n};\n\ninterface InterpolateRGB {\n  r: number[];\n  g: number[];\n  b: number[];\n  a: number[];\n}\n\nconst getInterpolateRGB = (\n  colors: readonly (string | number)[]\n): InterpolateRGB => {\n  'worklet';\n\n  const r = [];\n  const g = [];\n  const b = [];\n  const a = [];\n  for (let i = 0; i < colors.length; ++i) {\n    const color = colors[i];\n    const processedColor = processColor(color);\n    // explicit check in case if processedColor is 0\n    if (processedColor !== null && processedColor !== undefined) {\n      r.push(red(processedColor));\n      g.push(green(processedColor));\n      b.push(blue(processedColor));\n      a.push(opacity(processedColor));\n    }\n  }\n  return { r, g, b, a };\n};\n\ninterface InterpolateHSV {\n  h: number[];\n  s: number[];\n  v: number[];\n  a: number[];\n}\n\nconst getInterpolateHSV = (\n  colors: readonly (string | number)[]\n): InterpolateHSV => {\n  'worklet';\n  const h = [];\n  const s = [];\n  const v = [];\n  const a = [];\n  for (let i = 0; i < colors.length; ++i) {\n    const color = colors[i];\n    const processedColor = processColor(color) as any;\n    if (typeof processedColor === 'number') {\n      const processedHSVColor = RGBtoHSV(\n        red(processedColor),\n        green(processedColor),\n        blue(processedColor)\n      );\n\n      h.push(processedHSVColor.h);\n      s.push(processedHSVColor.s);\n      v.push(processedHSVColor.v);\n      a.push(opacity(processedColor));\n    }\n  }\n  return { h, s, v, a };\n};\n\nexport const interpolateColor = (\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly (string | number)[],\n  colorSpace: 'RGB' | 'HSV' = 'RGB',\n  options: InterpolationOptions = {}\n): string | number => {\n  'worklet';\n  if (colorSpace === 'HSV') {\n    return interpolateColorsHSV(\n      value,\n      inputRange,\n      getInterpolateHSV(outputRange),\n      options\n    );\n  } else if (colorSpace === 'RGB') {\n    return interpolateColorsRGB(\n      value,\n      inputRange,\n      getInterpolateRGB(outputRange),\n      options\n    );\n  }\n  throw new Error(\n    `Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV']`\n  );\n};\n\nexport enum ColorSpace {\n  RGB = 0,\n  HSV = 1,\n}\n\nexport interface InterpolateConfig {\n  inputRange: readonly number[];\n  outputRange: readonly (string | number)[];\n  colorSpace: ColorSpace;\n  cache: SharedValue<InterpolateRGB | InterpolateHSV | null>;\n  options: InterpolationOptions;\n}\n\nexport function useInterpolateConfig(\n  inputRange: readonly number[],\n  outputRange: readonly (string | number)[],\n  colorSpace = ColorSpace.RGB,\n  options: InterpolationOptions = {}\n): SharedValue<InterpolateConfig> {\n  return useSharedValue<InterpolateConfig>({\n    inputRange,\n    outputRange,\n    colorSpace,\n    cache: makeMutable<InterpolateRGB | InterpolateHSV | null>(null),\n    options,\n  });\n}\n\nexport const interpolateSharableColor = (\n  value: number,\n  interpolateConfig: SharedValue<InterpolateConfig>\n): string | number => {\n  'worklet';\n  let colors = interpolateConfig.value.cache.value;\n  if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {\n    if (!colors) {\n      colors = getInterpolateRGB(interpolateConfig.value.outputRange);\n      interpolateConfig.value.cache.value = colors;\n    }\n    return interpolateColorsRGB(\n      value,\n      interpolateConfig.value.inputRange,\n      colors as InterpolateRGB,\n      interpolateConfig.value.options\n    );\n  } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {\n    if (!colors) {\n      colors = getInterpolateHSV(interpolateConfig.value.outputRange);\n      interpolateConfig.value.cache.value = colors;\n    }\n    return interpolateColorsHSV(\n      value,\n      interpolateConfig.value.inputRange,\n      colors as InterpolateHSV,\n      interpolateConfig.value.options\n    );\n  }\n  throw new Error(\n    `Invalid color space provided: ${interpolateConfig.value.colorSpace}. Supported values are: ['RGB', 'HSV']`\n  );\n};\n"]},"metadata":{},"sourceType":"module"}