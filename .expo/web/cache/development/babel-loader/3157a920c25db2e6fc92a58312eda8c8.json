{"ast":null,"code":"import { useEvent, useHandler } from \"./Hooks\";\nexport var EventType = function (EventType) {\n  EventType[EventType[\"UNDETERMINED\"] = 0] = \"UNDETERMINED\";\n  EventType[EventType[\"FAILED\"] = 1] = \"FAILED\";\n  EventType[EventType[\"BEGAN\"] = 2] = \"BEGAN\";\n  EventType[EventType[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  EventType[EventType[\"ACTIVE\"] = 4] = \"ACTIVE\";\n  EventType[EventType[\"END\"] = 5] = \"END\";\n  return EventType;\n}({});\nvar _worklet_7959857095227_init_data = {\n  code: \"function anonymous(e) {\\n  const {\\n    useWeb,\\n    EventType,\\n    handlers,\\n    context\\n  } = this._closure;\\n  const event = useWeb ? e.nativeEvent : e;\\n  if (event.state === EventType.BEGAN && handlers.onStart) {\\n    handlers.onStart(event, context);\\n  }\\n  if (event.state === EventType.ACTIVE && handlers.onActive) {\\n    handlers.onActive(event, context);\\n  }\\n  if (event.oldState === EventType.ACTIVE && event.state === EventType.END && handlers.onEnd) {\\n    handlers.onEnd(event, context);\\n  }\\n  if (event.oldState === EventType.BEGAN && event.state === EventType.FAILED && handlers.onFail) {\\n    handlers.onFail(event, context);\\n  }\\n  if (event.oldState === EventType.ACTIVE && event.state === EventType.CANCELLED && handlers.onCancel) {\\n    handlers.onCancel(event, context);\\n  }\\n  if ((event.oldState === EventType.BEGAN || event.oldState === EventType.ACTIVE) && event.state !== EventType.BEGAN && event.state !== EventType.ACTIVE && handlers.onFinish) {\\n    handlers.onFinish(event, context, event.state === EventType.CANCELLED || event.state === EventType.FAILED);\\n  }\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"e\\\",\\\"useWeb\\\",\\\"EventType\\\",\\\"handlers\\\",\\\"context\\\",\\\"_closure\\\",\\\"event\\\",\\\"nativeEvent\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"onStart\\\",\\\"ACTIVE\\\",\\\"onActive\\\",\\\"oldState\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FAILED\\\",\\\"onFail\\\",\\\"CANCELLED\\\",\\\"onCancel\\\",\\\"onFinish\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.js\\\"],\\\"mappings\\\":\\\"AAgBkB,SAACA,SAAIA,CAAAC,CAAA;EAAA;IAAAC,MAAA;IAAAC,SAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EAGnB,MAAMC,KAAK,GAAGL,MAAM,GAAGD,CAAC,CAACO,WAAW,GAAGP,CAAC;EACxC,IAAIM,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACO,KAAK,IAAIN,QAAQ,CAACO,OAAO,EAAE;IACvDP,QAAQ,CAACO,OAAO,CAACJ,KAAK,EAAEF,OAAO,CAAC;EAClC;EACA,IAAIE,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACS,MAAM,IAAIR,QAAQ,CAACS,QAAQ,EAAE;IACzDT,QAAQ,CAACS,QAAQ,CAACN,KAAK,EAAEF,OAAO,CAAC;EACnC;EACA,IAAIE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACS,MAAM,IAAIL,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACY,GAAG,IAAIX,QAAQ,CAACY,KAAK,EAAE;IAC1FZ,QAAQ,CAACY,KAAK,CAACT,KAAK,EAAEF,OAAO,CAAC;EAChC;EACA,IAAIE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACO,KAAK,IAAIH,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACc,MAAM,IAAIb,QAAQ,CAACc,MAAM,EAAE;IAC7Fd,QAAQ,CAACc,MAAM,CAACX,KAAK,EAAEF,OAAO,CAAC;EACjC;EACA,IAAIE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACS,MAAM,IAAIL,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACgB,SAAS,IAAIf,QAAQ,CAACgB,QAAQ,EAAE;IACnGhB,QAAQ,CAACgB,QAAQ,CAACb,KAAK,EAAEF,OAAO,CAAC;EACnC;EACA,IAAI,CAACE,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACO,KAAK,IAAIH,KAAK,CAACO,QAAQ,KAAKX,SAAS,CAACS,MAAM,KAAKL,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACO,KAAK,IAAIH,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACS,MAAM,IAAIR,QAAQ,CAACiB,QAAQ,EAAE;IAC3KjB,QAAQ,CAACiB,QAAQ,CAACd,KAAK,EAAEF,OAAO,EAAEE,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACgB,SAAS,IAAIZ,KAAK,CAACE,KAAK,KAAKN,SAAS,CAACc,MAAM,CAAC;EAC5G;AACF\\\"}\"\n};\nexport function useAnimatedGestureHandler(handlers, dependencies) {\n  var _useHandler = useHandler(handlers, dependencies),\n      context = _useHandler.context,\n      doDependenciesDiffer = _useHandler.doDependenciesDiffer,\n      useWeb = _useHandler.useWeb;\n\n  var handler = function () {\n    var _e = [new global.Error(), -5, -27];\n\n    var _f = function _f(e) {\n      var event = useWeb ? e.nativeEvent : e;\n\n      if (event.state === EventType.BEGAN && handlers.onStart) {\n        handlers.onStart(event, context);\n      }\n\n      if (event.state === EventType.ACTIVE && handlers.onActive) {\n        handlers.onActive(event, context);\n      }\n\n      if (event.oldState === EventType.ACTIVE && event.state === EventType.END && handlers.onEnd) {\n        handlers.onEnd(event, context);\n      }\n\n      if (event.oldState === EventType.BEGAN && event.state === EventType.FAILED && handlers.onFail) {\n        handlers.onFail(event, context);\n      }\n\n      if (event.oldState === EventType.ACTIVE && event.state === EventType.CANCELLED && handlers.onCancel) {\n        handlers.onCancel(event, context);\n      }\n\n      if ((event.oldState === EventType.BEGAN || event.oldState === EventType.ACTIVE) && event.state !== EventType.BEGAN && event.state !== EventType.ACTIVE && handlers.onFinish) {\n        handlers.onFinish(event, context, event.state === EventType.CANCELLED || event.state === EventType.FAILED);\n      }\n    };\n\n    _f._closure = {\n      useWeb: useWeb,\n      EventType: EventType,\n      handlers: handlers,\n      context: context\n    };\n    _f.__initData = _worklet_7959857095227_init_data;\n    _f.__workletHash = 7959857095227;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n\n  if (useWeb) {\n    return handler;\n  }\n\n  return useEvent(handler, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], doDependenciesDiffer);\n}","map":{"version":3,"sources":["useAnimatedGestureHandler.ts"],"names":["useEvent","useHandler","EventType","useAnimatedGestureHandler","handlers","dependencies","context","doDependenciesDiffer","useWeb","handler","e","event","nativeEvent","state","BEGAN","onStart","ACTIVE","onActive","oldState","END","onEnd","FAILED","onFail","CANCELLED","onCancel","onFinish"],"mappings":"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","sourcesContent":["import { MutableRefObject } from 'react';\nimport { Context, WorkletFunction } from '../commonTypes';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\ninterface Handler<T, TContext extends Context> extends WorkletFunction {\n  (event: T, context: TContext, isCanceledOrFailed?: boolean): void;\n}\n\nexport interface GestureHandlers<T, TContext extends Context> {\n  [key: string]: Handler<T, TContext> | undefined;\n  onStart?: Handler<T, TContext>;\n  onActive?: Handler<T, TContext>;\n  onEnd?: Handler<T, TContext>;\n  onFail?: Handler<T, TContext>;\n  onCancel?: Handler<T, TContext>;\n  onFinish?: Handler<T, TContext>;\n}\n\nexport enum EventType {\n  UNDETERMINED = 0,\n  FAILED,\n  BEGAN,\n  CANCELLED,\n  ACTIVE,\n  END,\n}\n\nexport interface GestureHandlerStateChangeNativeEvent {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: EventType;\n  oldState: EventType;\n}\n\nexport interface GestureHandlerEvent<T>\n  extends GestureHandlerStateChangeNativeEvent {\n  nativeEvent: T;\n}\n\nexport function useAnimatedGestureHandler<\n  T extends GestureHandlerEvent<T>,\n  TContext extends Context\n>(\n  handlers: GestureHandlers<T, TContext>,\n  dependencies?: DependencyList\n): MutableRefObject<WorkletEventHandler<T> | null> | ((e: T) => void) {\n  const { context, doDependenciesDiffer, useWeb } = useHandler<T, TContext>(\n    handlers,\n    dependencies\n  );\n\n  const handler = (e: T) => {\n    'worklet';\n    const event = useWeb ? e.nativeEvent : e;\n\n    if (event.state === EventType.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EventType.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EventType.BEGAN &&\n      event.state === EventType.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EventType.BEGAN ||\n        event.oldState === EventType.ACTIVE) &&\n      event.state !== EventType.BEGAN &&\n      event.state !== EventType.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EventType.CANCELLED || event.state === EventType.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  return useEvent<T>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n  );\n}\n"]},"metadata":{},"sourceType":"module"}