{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useEffect, useRef } from 'react';\nimport { initializeSensor, registerSensor, unregisterSensor } from \"../core\";\nimport { SensorType, IOSReferenceFrame } from \"../commonTypes\";\nimport { callMicrotasks } from \"../threads\";\nvar _worklet_16207379104934_init_data = {\n  code: \"function eulerToQuaternion(pitch, roll, yaw) {\\n  const c1 = Math.cos(pitch / 2);\\n  const s1 = Math.sin(pitch / 2);\\n  const c2 = Math.cos(roll / 2);\\n  const s2 = Math.sin(roll / 2);\\n  const c3 = Math.cos(yaw / 2);\\n  const s3 = Math.sin(yaw / 2);\\n  return [s1 * c2 * c3 - c1 * s2 * s3, c1 * s2 * c3 + s1 * c2 * s3, c1 * c2 * s3 + s1 * s2 * c3, c1 * c2 * c3 - s1 * s2 * s3];\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"eulerToQuaternion\\\",\\\"pitch\\\",\\\"roll\\\",\\\"yaw\\\",\\\"c1\\\",\\\"Math\\\",\\\"cos\\\",\\\"s1\\\",\\\"sin\\\",\\\"c2\\\",\\\"s2\\\",\\\"c3\\\",\\\"s3\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\\\"],\\\"mappings\\\":\\\"AAKA,SAAAA,kBAAAC,KAAA,EAAAC,IAAA,EAAAC,GAAA;EAAA,MAAAC,EAAA,GAAAC,IAAA,CAAAC,GAAA,CAAAL,KAAA;EACA,MAAAM,EAAA,GAAAF,IAAA,CAAAG,GAAA,CAAAP,KAAA;EACA,MAAAQ,EAAS,GAAAJ,IAAA,CAAAC,GAAA,CAAAJ,IAAiB,GAAC;EAGzB,MAAMQ,EAAE,GAAGL,IAAI,CAACG,GAAG,CAACN,IAAA,GAAK,CAAG,CAAC;EAC7B,MAAMS,EAAE,GAAGN,IAAI,CAACC,GAAG,CAACH,GAAA,GAAK,EAAG;EAC5B,MAAMS,EAAE,GAAGP,IAAI,CAACG,GAAG,CAACL,GAAA,GAAI,CAAG,CAAC;EAC5B,OAAM,CAAEI,EAAA,GAAGE,EAAI,GAACE,EAAI,GAAAP,EAAI,GAAIM,EAAC,GAAAE,EAAA,EAAAR,EAAA,GAAAM,EAAA,GAAAC,EAAA,GAAAJ,EAAA,GAAAE,EAAA,GAAAG,EAAA,EAAAR,EAAA,GAAAK,EAAA,GAAAG,EAAA,GAAAL,EAAA,GAAAG,EAAA,GAAAC,EAAA,EAAAP,EAAA,GAAAK,EAAA,GAAAE,EAAA,GAAAJ,EAAA,GAAAG,EAAA,GAAAE,EAAA\\\"}\"\n};\n\nvar eulerToQuaternion = function () {\n  var _e = [new global.Error(), 1, -27];\n\n  var _f = function _f(pitch, roll, yaw) {\n    var c1 = Math.cos(pitch / 2);\n    var s1 = Math.sin(pitch / 2);\n    var c2 = Math.cos(roll / 2);\n    var s2 = Math.sin(roll / 2);\n    var c3 = Math.cos(yaw / 2);\n    var s3 = Math.sin(yaw / 2);\n    return [s1 * c2 * c3 - c1 * s2 * s3, c1 * s2 * c3 + s1 * c2 * s3, c1 * c2 * s3 + s1 * s2 * c3, c1 * c2 * c3 - s1 * s2 * s3];\n  };\n\n  _f._closure = {};\n  _f.__initData = _worklet_16207379104934_init_data;\n  _f.__workletHash = 16207379104934;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_4985018991112_init_data = {\n  code: \"function adjustRotationToInterfaceOrientation(data) {\\n  const {\\n    eulerToQuaternion\\n  } = this._closure;\\n  const {\\n    interfaceOrientation: interfaceOrientation,\\n    pitch: pitch,\\n    roll: roll,\\n    yaw: yaw\\n  } = data;\\n  if (interfaceOrientation === 90) {\\n    data.pitch = roll;\\n    data.roll = -pitch;\\n    data.yaw = yaw - Math.PI / 2;\\n  } else if (interfaceOrientation === 270) {\\n    data.pitch = -roll;\\n    data.roll = pitch;\\n    data.yaw = yaw + Math.PI / 2;\\n  } else if (interfaceOrientation === 180) {\\n    data.pitch *= -1;\\n    data.roll *= -1;\\n    data.yaw *= -1;\\n  }\\n  const q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\\n  data.qx = q[0];\\n  data.qy = q[1];\\n  data.qz = q[2];\\n  data.qw = q[3];\\n  return data;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"adjustRotationToInterfaceOrientation\\\",\\\"data\\\",\\\"eulerToQuaternion\\\",\\\"_closure\\\",\\\"interfaceOrientation\\\",\\\"pitch\\\",\\\"roll\\\",\\\"yaw\\\",\\\"Math\\\",\\\"PI\\\",\\\"q\\\",\\\"qx\\\",\\\"qy\\\",\\\"qz\\\",\\\"qw\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\\\"],\\\"mappings\\\":\\\"AAkBA,SAAAA,oCAASA,CAAqCC,IAAA,EAAI;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhD,MAAM;IACJC,oBAAoB,EAApBA,oBAAoB;IACpBC,KAAK,EAALA,KAAK;IACLC,IAAI,EAAJA,IAAI;IACJC,GAAA,EAAAA;EACF,CAAC,GAAGN,IAAI;EACR,IAAIG,oBAAoB,KAAK,EAAE,EAAE;IAC/BH,IAAI,CAACI,KAAK,GAAGC,IAAI;IACjBL,IAAI,CAACK,IAAI,GAAG,CAACD,KAAK;IAClBJ,IAAI,CAACM,GAAG,GAAGA,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;EAC9B,CAAC,MAAM,IAAIL,oBAAoB,KAAK,GAAG,EAAE;IACvCH,IAAI,CAACI,KAAK,GAAG,CAACC,IAAI;IAClBL,IAAI,CAACK,IAAI,GAAGD,KAAK;IACjBJ,IAAI,CAACM,GAAG,GAAGA,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;EAC9B,CAAC,MAAM,IAAIL,oBAAoB,KAAK,GAAG,EAAE;IACvCH,IAAI,CAACI,KAAK,IAAI,CAAC,CAAC;IAChBJ,IAAI,CAACK,IAAI,IAAI,CAAC,CAAC;IACfL,IAAI,CAACM,GAAG,IAAI,CAAC,CAAC;EAChB;EACA,MAAMG,CAAC,GAAGR,iBAAiB,CAACD,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACK,IAAI,EAAEL,IAAI,CAACM,GAAG,CAAC;EAC5DN,IAAI,CAACU,EAAE,GAAGD,CAAC,CAAC,CAAC,CAAC;EACdT,IAAI,CAACW,EAAE,GAAGF,CAAC,CAAC,CAAC,CAAC;EACdT,IAAI,CAACY,EAAE,GAAGH,CAAC,CAAC,CAAC,CAAC;EACdT,IAAI,CAACa,EAAE,GAAGJ,CAAC,CAAC,CAAC,CAAC;EACd,OAAOT,IAAI;AACb\\\"}\"\n};\n\nvar adjustRotationToInterfaceOrientation = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(data) {\n    var interfaceOrientation = data.interfaceOrientation,\n        pitch = data.pitch,\n        roll = data.roll,\n        yaw = data.yaw;\n\n    if (interfaceOrientation === 90) {\n      data.pitch = roll;\n      data.roll = -pitch;\n      data.yaw = yaw - Math.PI / 2;\n    } else if (interfaceOrientation === 270) {\n      data.pitch = -roll;\n      data.roll = pitch;\n      data.yaw = yaw + Math.PI / 2;\n    } else if (interfaceOrientation === 180) {\n      data.pitch *= -1;\n      data.roll *= -1;\n      data.yaw *= -1;\n    }\n\n    var q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n    data.qx = q[0];\n    data.qy = q[1];\n    data.qz = q[2];\n    data.qw = q[3];\n    return data;\n  };\n\n  _f._closure = {\n    eulerToQuaternion: eulerToQuaternion\n  };\n  _f.__initData = _worklet_4985018991112_init_data;\n  _f.__workletHash = 4985018991112;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_12606310302424_init_data = {\n  code: \"function adjustVectorToInterfaceOrientation(data) {\\n  const {\\n    interfaceOrientation: interfaceOrientation,\\n    x: x,\\n    y: y\\n  } = data;\\n  if (interfaceOrientation === 90) {\\n    data.x = -y;\\n    data.y = x;\\n  } else if (interfaceOrientation === 270) {\\n    data.x = y;\\n    data.y = -x;\\n  } else if (interfaceOrientation === 180) {\\n    data.x *= -1;\\n    data.y *= -1;\\n  }\\n  return data;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"adjustVectorToInterfaceOrientation\\\",\\\"data\\\",\\\"interfaceOrientation\\\",\\\"x\\\",\\\"y\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\\\"],\\\"mappings\\\":\\\"AA+CA,SAAAA,kCAASA,CAAmCC,IAAA,EAAI;EAG9C,MAAM;IACJC,oBAAoB,EAApBA,oBAAoB;IACpBC,CAAC,EAADA,CAAC;IACDC,CAAA,EAAAA;EACF,CAAC,GAAGH,IAAI;EACR,IAAIC,oBAAoB,KAAK,EAAE,EAAE;IAC/BD,IAAI,CAACE,CAAC,GAAG,CAACC,CAAC;IACXH,IAAI,CAACG,CAAC,GAAGD,CAAC;EACZ,CAAC,MAAM,IAAID,oBAAoB,KAAK,GAAG,EAAE;IACvCD,IAAI,CAACE,CAAC,GAAGC,CAAC;IACVH,IAAI,CAACG,CAAC,GAAG,CAACD,CAAC;EACb,CAAC,MAAM,IAAID,oBAAoB,KAAK,GAAG,EAAE;IACvCD,IAAI,CAACE,CAAC,IAAI,CAAC,CAAC;IACZF,IAAI,CAACG,CAAC,IAAI,CAAC,CAAC;EACd;EACA,OAAOH,IAAI;AACb\\\"}\"\n};\n\nvar adjustVectorToInterfaceOrientation = function () {\n  var _e = [new global.Error(), 1, -27];\n\n  var _f = function _f(data) {\n    var interfaceOrientation = data.interfaceOrientation,\n        x = data.x,\n        y = data.y;\n\n    if (interfaceOrientation === 90) {\n      data.x = -y;\n      data.y = x;\n    } else if (interfaceOrientation === 270) {\n      data.x = y;\n      data.y = -x;\n    } else if (interfaceOrientation === 180) {\n      data.x *= -1;\n      data.y *= -1;\n    }\n\n    return data;\n  };\n\n  _f._closure = {};\n  _f.__initData = _worklet_12606310302424_init_data;\n  _f.__workletHash = 12606310302424;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_16054857555903_init_data = {\n  code: \"function anonymous(data) {\\n  const {\\n    adjustToInterfaceOrientation,\\n    sensorType,\\n    SensorType,\\n    adjustRotationToInterfaceOrientation,\\n    adjustVectorToInterfaceOrientation,\\n    sensorData,\\n    callMicrotasks\\n  } = this._closure;\\n  if (adjustToInterfaceOrientation) {\\n    if (sensorType === SensorType.ROTATION) {\\n      data = adjustRotationToInterfaceOrientation(data);\\n    } else {\\n      data = adjustVectorToInterfaceOrientation(data);\\n    }\\n  }\\n  sensorData.value = data;\\n  callMicrotasks();\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"data\\\",\\\"adjustToInterfaceOrientation\\\",\\\"sensorType\\\",\\\"SensorType\\\",\\\"adjustRotationToInterfaceOrientation\\\",\\\"adjustVectorToInterfaceOrientation\\\",\\\"sensorData\\\",\\\"callMicrotasks\\\",\\\"_closure\\\",\\\"ROTATION\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedSensor.js\\\"],\\\"mappings\\\":\\\"AA0FkD,SAAAA,SAAQA,CAAAC,IAAA;EAAA;IAAAC,4BAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAC,oCAAA;IAAAC,kCAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAGpD,IAAIP,4BAA4B,EAAE;IAChC,IAAIC,UAAU,KAAKC,UAAU,CAACM,QAAQ,EAAE;MACtCT,IAAI,GAAGI,oCAAoC,CAACJ,IAAI,CAAC;IACnD,CAAC,MAAM;MACLA,IAAI,GAAGK,kCAAkC,CAACL,IAAI,CAAC;IACjD;EACF;EACAM,UAAU,CAACI,KAAK,GAAGV,IAAI;EACvBO,cAAc,CAAC,CAAC;AAClB\\\"}\"\n};\nexport function useAnimatedSensor(sensorType, userConfig) {\n  var config = _objectSpread({\n    interval: 'auto',\n    adjustToInterfaceOrientation: true,\n    iosReferenceFrame: IOSReferenceFrame.Auto\n  }, userConfig);\n\n  var ref = useRef({\n    sensor: initializeSensor(sensorType, config),\n    unregister: function unregister() {},\n    isAvailable: false,\n    config: config\n  });\n  useEffect(function () {\n    var newConfig = _objectSpread(_objectSpread({}, config), userConfig);\n\n    ref.current.sensor = initializeSensor(sensorType, newConfig);\n    var sensorData = ref.current.sensor;\n    var adjustToInterfaceOrientation = ref.current.config.adjustToInterfaceOrientation;\n    var id = registerSensor(sensorType, config, function () {\n      var _e = [new global.Error(), -8, -27];\n\n      var _f = function _f(data) {\n        if (adjustToInterfaceOrientation) {\n          if (sensorType === SensorType.ROTATION) {\n            data = adjustRotationToInterfaceOrientation(data);\n          } else {\n            data = adjustVectorToInterfaceOrientation(data);\n          }\n        }\n\n        sensorData.value = data;\n        callMicrotasks();\n      };\n\n      _f._closure = {\n        adjustToInterfaceOrientation: adjustToInterfaceOrientation,\n        sensorType: sensorType,\n        SensorType: SensorType,\n        adjustRotationToInterfaceOrientation: adjustRotationToInterfaceOrientation,\n        adjustVectorToInterfaceOrientation: adjustVectorToInterfaceOrientation,\n        sensorData: sensorData,\n        callMicrotasks: callMicrotasks\n      };\n      _f.__initData = _worklet_16054857555903_init_data;\n      _f.__workletHash = 16054857555903;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }());\n\n    if (id !== -1) {\n      ref.current.unregister = function () {\n        return unregisterSensor(id);\n      };\n\n      ref.current.isAvailable = true;\n    } else {\n      ref.current.unregister = function () {};\n\n      ref.current.isAvailable = false;\n    }\n\n    return function () {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n  return ref.current;\n}","map":{"version":3,"sources":["useAnimatedSensor.ts"],"names":["useEffect","useRef","initializeSensor","registerSensor","unregisterSensor","SensorType","IOSReferenceFrame","callMicrotasks","eulerToQuaternion","pitch","roll","yaw","c1","Math","cos","s1","sin","c2","s2","c3","s3","adjustRotationToInterfaceOrientation","data","interfaceOrientation","PI","q","qx","qy","qz","qw","adjustVectorToInterfaceOrientation","x","y","useAnimatedSensor","sensorType","userConfig","config","interval","adjustToInterfaceOrientation","iosReferenceFrame","Auto","ref","sensor","unregister","isAvailable","newConfig","current","sensorData","id","ROTATION","value"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { initializeSensor, registerSensor, unregisterSensor } from '../core';\nimport {\n  SensorType,\n  IOSReferenceFrame,\n  SensorConfig,\n  AnimatedSensor,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport { callMicrotasks } from '../threads';\n\n// euler angles are in order ZXY, z = yaw, x = pitch, y = roll\n// https://github.com/mrdoob/three.js/blob/dev/src/math/Quaternion.js#L237\nfunction eulerToQuaternion(pitch: number, roll: number, yaw: number) {\n  'worklet';\n  const c1 = Math.cos(pitch / 2);\n  const s1 = Math.sin(pitch / 2);\n  const c2 = Math.cos(roll / 2);\n  const s2 = Math.sin(roll / 2);\n  const c3 = Math.cos(yaw / 2);\n  const s3 = Math.sin(yaw / 2);\n\n  return [\n    s1 * c2 * c3 - c1 * s2 * s3,\n    c1 * s2 * c3 + s1 * c2 * s3,\n    c1 * c2 * s3 + s1 * s2 * c3,\n    c1 * c2 * c3 - s1 * s2 * s3,\n  ];\n}\n\nfunction adjustRotationToInterfaceOrientation(data: ValueRotation) {\n  'worklet';\n  const { interfaceOrientation, pitch, roll, yaw } = data;\n  if (interfaceOrientation === 90) {\n    data.pitch = roll;\n    data.roll = -pitch;\n    data.yaw = yaw - Math.PI / 2;\n  } else if (interfaceOrientation === 270) {\n    data.pitch = -roll;\n    data.roll = pitch;\n    data.yaw = yaw + Math.PI / 2;\n  } else if (interfaceOrientation === 180) {\n    data.pitch *= -1;\n    data.roll *= -1;\n    data.yaw *= -1;\n  }\n\n  const q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n  data.qx = q[0];\n  data.qy = q[1];\n  data.qz = q[2];\n  data.qw = q[3];\n  return data;\n}\n\nfunction adjustVectorToInterfaceOrientation(data: Value3D) {\n  'worklet';\n  const { interfaceOrientation, x, y } = data;\n  if (interfaceOrientation === 90) {\n    data.x = -y;\n    data.y = x;\n  } else if (interfaceOrientation === 270) {\n    data.x = y;\n    data.y = -x;\n  } else if (interfaceOrientation === 180) {\n    data.x *= -1;\n    data.y *= -1;\n  }\n  return data;\n}\n\nexport function useAnimatedSensor(\n  sensorType: SensorType,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor {\n  const config: SensorConfig = {\n    interval: 'auto',\n    adjustToInterfaceOrientation: true,\n    iosReferenceFrame: IOSReferenceFrame.Auto,\n    ...userConfig,\n  };\n  const ref = useRef<AnimatedSensor>({\n    sensor: initializeSensor(sensorType, config),\n    unregister: () => {\n      // NOOP\n    },\n    isAvailable: false,\n    config: config,\n  });\n\n  useEffect(() => {\n    const newConfig = {\n      ...config,\n      ...userConfig,\n    };\n    ref.current.sensor = initializeSensor(sensorType, newConfig);\n\n    const sensorData = ref.current.sensor;\n    const adjustToInterfaceOrientation =\n      ref.current.config.adjustToInterfaceOrientation;\n\n    const id = registerSensor(sensorType, config, (data) => {\n      'worklet';\n      if (adjustToInterfaceOrientation) {\n        if (sensorType === SensorType.ROTATION) {\n          data = adjustRotationToInterfaceOrientation(data as ValueRotation);\n        } else {\n          data = adjustVectorToInterfaceOrientation(data as Value3D);\n        }\n      }\n      sensorData.value = data;\n      callMicrotasks();\n    });\n\n    if (id !== -1) {\n      // if sensor is available\n      ref.current.unregister = () => unregisterSensor(id);\n      ref.current.isAvailable = true;\n    } else {\n      // if sensor is unavailable\n      ref.current.unregister = () => {\n        // NOOP\n      };\n      ref.current.isAvailable = false;\n    }\n\n    return () => {\n      ref.current.unregister();\n    };\n  }, [sensorType, userConfig]);\n\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module"}