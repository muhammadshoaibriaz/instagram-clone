{"ast":null,"code":"export var Extrapolation = function (Extrapolation) {\n  Extrapolation[\"IDENTITY\"] = \"identity\";\n  Extrapolation[\"CLAMP\"] = \"clamp\";\n  Extrapolation[\"EXTEND\"] = \"extend\";\n  return Extrapolation;\n}({});\nvar _worklet_15627513880224_init_data = {\n  code: \"function getVal(type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {\\n  const {\\n    Extrapolation\\n  } = this._closure;\\n  switch (type) {\\n    case Extrapolation.IDENTITY:\\n      return x;\\n    case Extrapolation.CLAMP:\\n      if (coef * val < coef * leftEdgeOutput) {\\n        return leftEdgeOutput;\\n      }\\n      return rightEdgeOutput;\\n    case Extrapolation.EXTEND:\\n    default:\\n      return val;\\n  }\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getVal\\\",\\\"type\\\",\\\"coef\\\",\\\"val\\\",\\\"leftEdgeOutput\\\",\\\"rightEdgeOutput\\\",\\\"x\\\",\\\"Extrapolation\\\",\\\"_closure\\\",\\\"IDENTITY\\\",\\\"CLAMP\\\",\\\"EXTEND\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\\\"],\\\"mappings\\\":\\\"AAMA,SAAAA,MAASA,CAAOC,IAAA,EAAIC,IAAE,EAAIC,GAAE,EAAGC,cAAE,EAAcC,eAAE,EAAeC,CAAG;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGjE,QAAQP,IAAI;IACV,KAAKM,aAAa,CAACE,QAAQ;MACzB,OAAOH,CAAC;IACV,KAAKC,aAAa,CAACG,KAAK;MACtB,IAAIR,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGE,cAAc,EAAE;QACtC,OAAOA,cAAc;MACvB;MACA,OAAOC,eAAe;IACxB,KAAKE,aAAa,CAACI,MAAM;IACzB;MACE,OAAOR,GAAG;EACd;AACF\\\"}\"\n};\n\nvar getVal = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {\n    switch (type) {\n      case Extrapolation.IDENTITY:\n        return x;\n\n      case Extrapolation.CLAMP:\n        if (coef * val < coef * leftEdgeOutput) {\n          return leftEdgeOutput;\n        }\n\n        return rightEdgeOutput;\n\n      case Extrapolation.EXTEND:\n      default:\n        return val;\n    }\n  };\n\n  _f._closure = {\n    Extrapolation: Extrapolation\n  };\n  _f.__initData = _worklet_15627513880224_init_data;\n  _f.__workletHash = 15627513880224;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_4592001914569_init_data = {\n  code: \"function isExtrapolate(value) {\\n  const {\\n    Extrapolation\\n  } = this._closure;\\n  return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isExtrapolate\\\",\\\"value\\\",\\\"Extrapolation\\\",\\\"_closure\\\",\\\"EXTEND\\\",\\\"CLAMP\\\",\\\"IDENTITY\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\\\"],\\\"mappings\\\":\\\"AAsBA,SAAAA,aAASA,CAAcC,KAAA,EAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG1B,OAAOF,KAAK,KAAKC,aAAa,CAACE,MAAM,IAAIH,KAAK,KAAKC,aAAa,CAACG,KAAK,IAAIJ,KAAK,KAAKC,aAAa,CAACI,QAAQ;AAC5G\\\"}\"\n};\n\nvar isExtrapolate = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(value) {\n    return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;\n  };\n\n  _f._closure = {\n    Extrapolation: Extrapolation\n  };\n  _f.__initData = _worklet_4592001914569_init_data;\n  _f.__workletHash = 4592001914569;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_10443529399311_init_data = {\n  code: \"function validateType(type) {\\n  const {\\n    Extrapolation,\\n    isExtrapolate\\n  } = this._closure;\\n  const extrapolationConfig = {\\n    extrapolateLeft: Extrapolation.EXTEND,\\n    extrapolateRight: Extrapolation.EXTEND\\n  };\\n  if (!type) {\\n    return extrapolationConfig;\\n  }\\n  if (typeof type === 'string') {\\n    if (!isExtrapolate(type)) {\\n      throw new Error(\\\"Reanimated: not supported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n        interpolate(value, [inputRange], [outputRange], \\\\\\\"clamp\\\\\\\")\\\");\\n    }\\n    extrapolationConfig.extrapolateLeft = type;\\n    extrapolationConfig.extrapolateRight = type;\\n    return extrapolationConfig;\\n  }\\n  if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {\\n    throw new Error(\\\"Reanimated: not supported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n      interpolate(value, [inputRange], [outputRange], {\\\\n        extrapolateLeft: Extrapolation.CLAMP,\\\\n        extrapolateRight: Extrapolation.IDENTITY\\\\n      }})\\\");\\n  }\\n  Object.assign(extrapolationConfig, type);\\n  return extrapolationConfig;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"validateType\\\",\\\"type\\\",\\\"Extrapolation\\\",\\\"isExtrapolate\\\",\\\"_closure\\\",\\\"extrapolationConfig\\\",\\\"extrapolateLeft\\\",\\\"EXTEND\\\",\\\"extrapolateRight\\\",\\\"Error\\\",\\\"Object\\\",\\\"assign\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\\\"],\\\"mappings\\\":\\\"AA4BA,SAAAA,aAAAC,IAAA;EAAA;IAAAC,aAAA;IAAAC;EAAA,SAAAC,QAAA;EACA,MAAAC,mBAAA;IACAC,eAAS,EAAYJ,aAAO,CAAAK,MAAA;IAG1BC,gBAAA,EAAAN,aAAA,CAAAK;EACA;MACE,CAAAN,IAAA;IACA,OAAAI,mBAAkB;EACpB;EACA,IAAI,OAAOJ,IAAA;IACT,KAAAE,aAAO,CAAAF,IAAA,GAAmB;MAC5B,UAAAQ,KAAA;IACA;IACEJ,mBAAmB,CAAAC,eAAO,GAAAL,IAAA;uBACT,CAAAO,gBAAA,GAAAP,IAAA;IAEjB,OAAAI,mBAAA;;EAIF,IAAAJ,IAAA,CAAAK,eAAA,KAAAH,aAAA,CAAAF,IAAA,CAAAK,eAAA,KAAAL,IAAA,CAAAO,gBAAA,KAAAL,aAAA,CAAAF,IAAA,CAAAO,gBAAA;;EAEA;EACAE,MAAI,CAAAC,MAAK,CAAAN,mBAAoB,EAAAJ,IAAA;SAC3BI,mBAAe\\\"}\"\n};\n\nvar validateType = function () {\n  var _e = [new global.Error(), -3, -27];\n\n  var _f = function _f(type) {\n    var extrapolationConfig = {\n      extrapolateLeft: Extrapolation.EXTEND,\n      extrapolateRight: Extrapolation.EXTEND\n    };\n\n    if (!type) {\n      return extrapolationConfig;\n    }\n\n    if (typeof type === 'string') {\n      if (!isExtrapolate(type)) {\n        throw new Error(`Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n        interpolate(value, [inputRange], [outputRange], \"clamp\")`);\n      }\n\n      extrapolationConfig.extrapolateLeft = type;\n      extrapolationConfig.extrapolateRight = type;\n      return extrapolationConfig;\n    }\n\n    if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {\n      throw new Error(`Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n      interpolate(value, [inputRange], [outputRange], {\n        extrapolateLeft: Extrapolation.CLAMP,\n        extrapolateRight: Extrapolation.IDENTITY\n      }})`);\n    }\n\n    Object.assign(extrapolationConfig, type);\n    return extrapolationConfig;\n  };\n\n  _f._closure = {\n    Extrapolation: Extrapolation,\n    isExtrapolate: isExtrapolate\n  };\n  _f.__initData = _worklet_10443529399311_init_data;\n  _f.__workletHash = 10443529399311;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_8807172494339_init_data = {\n  code: \"function internalInterpolate(x, narrowedInput, extrapolationConfig) {\\n  const {\\n    getVal\\n  } = this._closure;\\n  const {\\n    leftEdgeInput: leftEdgeInput,\\n    rightEdgeInput: rightEdgeInput,\\n    leftEdgeOutput: leftEdgeOutput,\\n    rightEdgeOutput: rightEdgeOutput\\n  } = narrowedInput;\\n  if (rightEdgeInput - leftEdgeInput === 0) return leftEdgeOutput;\\n  const progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\\n  const val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\\n  const coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\\n  if (coef * val < coef * leftEdgeOutput) {\\n    return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);\\n  } else if (coef * val > coef * rightEdgeOutput) {\\n    return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);\\n  }\\n  return val;\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"internalInterpolate\\\",\\\"x\\\",\\\"narrowedInput\\\",\\\"extrapolationConfig\\\",\\\"getVal\\\",\\\"_closure\\\",\\\"leftEdgeInput\\\",\\\"rightEdgeInput\\\",\\\"leftEdgeOutput\\\",\\\"rightEdgeOutput\\\",\\\"progress\\\",\\\"val\\\",\\\"coef\\\",\\\"extrapolateLeft\\\",\\\"extrapolateRight\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\\\"],\\\"mappings\\\":\\\"AA8DA,SAAAA,mBAASA,CAAoBC,CAAC,EAAAC,aAAE,EAAaC,mBAAE,EAAmB;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhE,MAAM;IACJC,aAAa,EAAbA,aAAa;IACbC,cAAc,EAAdA,cAAc;IACdC,cAAc,EAAdA,cAAc;IACdC,eAAA,EAAAA;EACF,CAAC,GAAGP,aAAa;EACjB,IAAIK,cAAc,GAAGD,aAAa,KAAK,CAAC,EAAE,OAAOE,cAAc;EAC/D,MAAME,QAAQ,GAAG,CAACT,CAAC,GAAGK,aAAa,KAAKC,cAAc,GAAGD,aAAa,CAAC;EACvE,MAAMK,GAAG,GAAGH,cAAc,GAAGE,QAAQ,IAAID,eAAe,GAAGD,cAAc,CAAC;EAC1E,MAAMI,IAAI,GAAGH,eAAe,IAAID,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;EACvD,IAAII,IAAI,GAAGD,GAAG,GAAGC,IAAI,GAAGJ,cAAc,EAAE;IACtC,OAAOJ,MAAM,CAACD,mBAAmB,CAACU,eAAe,EAAED,IAAI,EAAED,GAAG,EAAEH,cAAc,EAAEC,eAAe,EAAER,CAAC,CAAC;EACnG,CAAC,MAAM,IAAIW,IAAI,GAAGD,GAAG,GAAGC,IAAI,GAAGH,eAAe,EAAE;IAC9C,OAAOL,MAAM,CAACD,mBAAmB,CAACW,gBAAgB,EAAEF,IAAI,EAAED,GAAG,EAAEH,cAAc,EAAEC,eAAe,EAAER,CAAC,CAAC;EACpG;EACA,OAAOU,GAAG;AACZ\\\"}\"\n};\n\nvar internalInterpolate = function () {\n  var _e = [new global.Error(), -2, -27];\n\n  var _f = function _f(x, narrowedInput, extrapolationConfig) {\n    var leftEdgeInput = narrowedInput.leftEdgeInput,\n        rightEdgeInput = narrowedInput.rightEdgeInput,\n        leftEdgeOutput = narrowedInput.leftEdgeOutput,\n        rightEdgeOutput = narrowedInput.rightEdgeOutput;\n    if (rightEdgeInput - leftEdgeInput === 0) return leftEdgeOutput;\n    var progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\n    var val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\n    var coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\n\n    if (coef * val < coef * leftEdgeOutput) {\n      return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n    } else if (coef * val > coef * rightEdgeOutput) {\n      return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n    }\n\n    return val;\n  };\n\n  _f._closure = {\n    getVal: getVal\n  };\n  _f.__initData = _worklet_8807172494339_init_data;\n  _f.__workletHash = 8807172494339;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_4383905646518_init_data = {\n  code: \"function interpolate(x, input, output, type) {\\n  const {\\n    validateType,\\n    internalInterpolate\\n  } = this._closure;\\n  if (input.length < 2 || output.length < 2) {\\n    throw Error('Interpolation input and output should contain at least two values.');\\n  }\\n  const extrapolationConfig = validateType(type);\\n  const length = input.length;\\n  const narrowedInput = {\\n    leftEdgeInput: input[0],\\n    rightEdgeInput: input[1],\\n    leftEdgeOutput: output[0],\\n    rightEdgeOutput: output[1]\\n  };\\n  if (length > 2) {\\n    if (x > input[length - 1]) {\\n      narrowedInput.leftEdgeInput = input[length - 2];\\n      narrowedInput.rightEdgeInput = input[length - 1];\\n      narrowedInput.leftEdgeOutput = output[length - 2];\\n      narrowedInput.rightEdgeOutput = output[length - 1];\\n    } else {\\n      for (let i = 1; i < length; ++i) {\\n        if (x <= input[i]) {\\n          narrowedInput.leftEdgeInput = input[i - 1];\\n          narrowedInput.rightEdgeInput = input[i];\\n          narrowedInput.leftEdgeOutput = output[i - 1];\\n          narrowedInput.rightEdgeOutput = output[i];\\n          break;\\n        }\\n      }\\n    }\\n  }\\n  return internalInterpolate(x, narrowedInput, extrapolationConfig);\\n}\",\n  location: \"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolate\\\",\\\"x\\\",\\\"input\\\",\\\"output\\\",\\\"type\\\",\\\"validateType\\\",\\\"internalInterpolate\\\",\\\"_closure\\\",\\\"length\\\",\\\"Error\\\",\\\"extrapolationConfig\\\",\\\"narrowedInput\\\",\\\"leftEdgeInput\\\",\\\"rightEdgeInput\\\",\\\"leftEdgeOutput\\\",\\\"rightEdgeOutput\\\",\\\"i\\\"],\\\"sources\\\":[\\\"/Users/Shoaib/Awesome/node_modules/react-native-reanimated/lib/module/reanimated2/interpolation.js\\\"],\\\"mappings\\\":\\\"AAqFO,SAAAA,WAASA,CAAYC,CAAC,EAAAC,KAAE,EAAKC,MAAE,EAAMC,IAAE,EAAI;EAAA;IAAAC,YAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhD,IAAIL,KAAK,CAACM,MAAM,GAAG,CAAC,IAAIL,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE;IACzC,MAAMC,KAAK,CAAC,oEAAoE,CAAC;EACnF;EACA,MAAMC,mBAAmB,GAAGL,YAAY,CAACD,IAAI,CAAC;EAC9C,MAAMI,MAAM,GAAGN,KAAK,CAACM,MAAM;EAC3B,MAAMG,aAAa,GAAG;IACpBC,aAAa,EAAEV,KAAK,CAAC,CAAC,CAAC;IACvBW,cAAc,EAAEX,KAAK,CAAC,CAAC,CAAC;IACxBY,cAAc,EAAEX,MAAM,CAAC,CAAC,CAAC;IACzBY,eAAe,EAAEZ,MAAM,CAAC,CAAC;EAC3B,CAAC;EACD,IAAIK,MAAM,GAAG,CAAC,EAAE;IACd,IAAIP,CAAC,GAAGC,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,EAAE;MACzBG,aAAa,CAACC,aAAa,GAAGV,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;MAC/CG,aAAa,CAACE,cAAc,GAAGX,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;MAChDG,aAAa,CAACG,cAAc,GAAGX,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC;MACjDG,aAAa,CAACI,eAAe,GAAGZ,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC;IACpD,CAAC,MAAM;MACL,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAE,EAAEQ,CAAC,EAAE;QAC/B,IAAIf,CAAC,IAAIC,KAAK,CAACc,CAAC,CAAC,EAAE;UACjBL,aAAa,CAACC,aAAa,GAAGV,KAAK,CAACc,CAAC,GAAG,CAAC,CAAC;UAC1CL,aAAa,CAACE,cAAc,GAAGX,KAAK,CAACc,CAAC,CAAC;UACvCL,aAAa,CAACG,cAAc,GAAGX,MAAM,CAACa,CAAC,GAAG,CAAC,CAAC;UAC5CL,aAAa,CAACI,eAAe,GAAGZ,MAAM,CAACa,CAAC,CAAC;UACzC;QACF;MACF;IACF;EACF;EACA,OAAOV,mBAAmB,CAACL,CAAC,EAAEU,aAAa,EAAED,mBAAmB,CAAC;AACnE\\\"}\"\n};\nexport var interpolate = function () {\n  var _e = [new global.Error(), -3, -27];\n\n  var _f = function _f(x, input, output, type) {\n    if (input.length < 2 || output.length < 2) {\n      throw Error('Interpolation input and output should contain at least two values.');\n    }\n\n    var extrapolationConfig = validateType(type);\n    var length = input.length;\n    var narrowedInput = {\n      leftEdgeInput: input[0],\n      rightEdgeInput: input[1],\n      leftEdgeOutput: output[0],\n      rightEdgeOutput: output[1]\n    };\n\n    if (length > 2) {\n      if (x > input[length - 1]) {\n        narrowedInput.leftEdgeInput = input[length - 2];\n        narrowedInput.rightEdgeInput = input[length - 1];\n        narrowedInput.leftEdgeOutput = output[length - 2];\n        narrowedInput.rightEdgeOutput = output[length - 1];\n      } else {\n        for (var i = 1; i < length; ++i) {\n          if (x <= input[i]) {\n            narrowedInput.leftEdgeInput = input[i - 1];\n            narrowedInput.rightEdgeInput = input[i];\n            narrowedInput.leftEdgeOutput = output[i - 1];\n            narrowedInput.rightEdgeOutput = output[i];\n            break;\n          }\n        }\n      }\n    }\n\n    return internalInterpolate(x, narrowedInput, extrapolationConfig);\n  };\n\n  _f._closure = {\n    validateType: validateType,\n    internalInterpolate: internalInterpolate\n  };\n  _f.__initData = _worklet_4383905646518_init_data;\n  _f.__workletHash = 4383905646518;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"sources":["interpolation.ts"],"names":["Extrapolation","getVal","type","coef","val","leftEdgeOutput","rightEdgeOutput","x","IDENTITY","CLAMP","EXTEND","isExtrapolate","value","validateType","extrapolationConfig","extrapolateLeft","extrapolateRight","Error","Object","assign","internalInterpolate","narrowedInput","leftEdgeInput","rightEdgeInput","progress","interpolate","input","output","length","i"],"mappings":"AAAA,OAAA,IAAYA,aAAa,GAAA,UAAbA,aAAa,EAAA;EAAbA,aAAa,CAAA,UAAA,CAAbA,GAAa,UAAbA;EAAAA,aAAa,CAAA,OAAA,CAAbA,GAAa,OAAbA;EAAAA,aAAa,CAAA,QAAA,CAAbA,GAAa,QAAbA;EAAa,OAAbA,aAAa;AAAA,CAAA,CAAA,EAAA,CAAzB;;;;;;;IA6BSC,M;;;uBACPC,I,EACAC,I,EACAC,G,EACAC,c,EACAC,e,EACAC,C,EACQ;IAGR,QAAQL,IAAR;MACE,KAAKF,aAAa,CAACQ,QAAnB;QACE,OAAOD,CAAP;;MACF,KAAKP,aAAa,CAACS,KAAnB;QACE,IAAIN,IAAI,GAAGC,GAAPD,GAAaA,IAAI,GAAGE,cAAxB,EAAwC;UACtC,OAAOA,cAAP;QACF;;QACA,OAAOC,eAAP;;MACF,KAAKN,aAAa,CAACU,MAAnB;MACA;QACE,OAAON,GAAP;IAVJ;EAYF,C;;;mBAZE;;;;;;;;;;;;;;;IAcOO,a;;;uBAAcC,K,EAAuC;IAG5D,OACEA,KAAK,KAAKZ,aAAa,CAACU,MAAxBE,IACAA,KAAK,KAAKZ,aAAa,CAACS,KADxBG,IAEAA,KAAK,KAAKZ,aAAa,CAACQ,QAH1B;EAKF,C;;;mBA7DyB;;;;;;;;;;;;;;;IAiEhBK,Y;;;uBAAaX,I,EAAsD;IAG1E,IAAMY,mBAAgD,GAAG;MACvDC,eAAe,EAAEf,aAAa,CAACU,MADwB;MAEvDM,gBAAgB,EAAEhB,aAAa,CAACU;IAFuB,CAAzD;;IAKA,IAAI,CAACR,IAAL,EAAW;MACT,OAAOY,mBAAP;IACF;;IAEA,IAAI,OAAOZ,IAAP,KAAgB,QAApB,EAA8B;MAC5B,IAAI,CAACS,aAAa,CAACT,IAAD,CAAlB,EAA0B;QACxB,MAAM,IAAIe,KAAJ,CACH;AACT,iEAFY,CAAN;MAIF;;MACAH,mBAAmB,CAACC,eAApBD,GAAsCZ,IAAtCY;MACAA,mBAAmB,CAACE,gBAApBF,GAAuCZ,IAAvCY;MACA,OAAOA,mBAAP;IACF;;IAGA,IACGZ,IAAI,CAACa,eAALb,IAAwB,CAACS,aAAa,CAACT,IAAI,CAACa,eAAN,CAAtCb,IACAA,IAAI,CAACc,gBAALd,IAAyB,CAACS,aAAa,CAACT,IAAI,CAACc,gBAAN,CAF1C,EAGE;MACA,MAAM,IAAIC,KAAJ,CACH;AACP;AACA;AACA;AACA,UALU,CAAN;IAOF;;IAEAC,MAAM,CAACC,MAAPD,CAAcJ,mBAAdI,EAAmChB,IAAnCgB;IACA,OAAOJ,mBAAP;EACF,C;;;mBA1EEX,a;mBAsB4D;;;;;;;;;;;;;;;IAsDrDiB,mB;;;uBACPb,C,EACAc,a,EACAP,mB,EACA;IAEA,IAAQQ,aAAR,GACED,aADF,CAAQC,aAAR;IAAA,IAAuBC,cAAvB,GACEF,aADF,CAAuBE,cAAvB;IAAA,IAAuClB,cAAvC,GACEgB,aADF,CAAuChB,cAAvC;IAAA,IAAuDC,eAAvD,GACEe,aADF,CAAuDf,eAAvD;IAEA,IAAIiB,cAAc,GAAGD,aAAjBC,KAAmC,CAAvC,EAA0C,OAAOlB,cAAP;IAC1C,IAAMmB,QAAQ,GAAG,CAACjB,CAAC,GAAGe,aAAL,KAAuBC,cAAc,GAAGD,aAAxC,CAAjB;IACA,IAAMlB,GAAG,GAAGC,cAAc,GAAGmB,QAAQ,IAAIlB,eAAe,GAAGD,cAAtB,CAArC;IACA,IAAMF,IAAI,GAAGG,eAAe,IAAID,cAAnBC,GAAoC,CAApCA,GAAwC,CAAC,CAAtD;;IAEA,IAAIH,IAAI,GAAGC,GAAPD,GAAaA,IAAI,GAAGE,cAAxB,EAAwC;MACtC,OAAOJ,MAAM,CACXa,mBAAmB,CAACC,eADT,EAEXZ,IAFW,EAGXC,GAHW,EAIXC,cAJW,EAKXC,eALW,EAMXC,CANW,CAAb;IAQD,CATD,MASO,IAAIJ,IAAI,GAAGC,GAAPD,GAAaA,IAAI,GAAGG,eAAxB,EAAyC;MAC9C,OAAOL,MAAM,CACXa,mBAAmB,CAACE,gBADT,EAEXb,IAFW,EAGXC,GAHW,EAIXC,cAJW,EAKXC,eALW,EAMXC,CANW,CAAb;IAQF;;IAEA,OAAOH,GAAP;EACF,C;;;YAjGQ;;;;;;;;;;;;;;AAqGR,WAAgBqB,WAAhB;EAAA;;EAAA,qBACElB,CADF,EAEEmB,KAFF,EAGEC,MAHF,EAIEzB,IAJF,EAKU;IAER,IAAIwB,KAAK,CAACE,MAANF,GAAe,CAAfA,IAAoBC,MAAM,CAACC,MAAPD,GAAgB,CAAxC,EAA2C;MACzC,MAAMV,KAAK,CACT,oEADS,CAAX;IAGF;;IAEA,IAAMH,mBAAmB,GAAGD,YAAY,CAACX,IAAD,CAAxC;IACA,IAAM0B,MAAM,GAAGF,KAAK,CAACE,MAArB;IACA,IAAMP,aAAyC,GAAG;MAChDC,aAAa,EAAEI,KAAK,CAAC,CAAD,CAD4B;MAEhDH,cAAc,EAAEG,KAAK,CAAC,CAAD,CAF2B;MAGhDrB,cAAc,EAAEsB,MAAM,CAAC,CAAD,CAH0B;MAIhDrB,eAAe,EAAEqB,MAAM,CAAC,CAAD;IAJyB,CAAlD;;IAMA,IAAIC,MAAM,GAAG,CAAb,EAAgB;MACd,IAAIrB,CAAC,GAAGmB,KAAK,CAACE,MAAM,GAAG,CAAV,CAAb,EAA2B;QACzBP,aAAa,CAACC,aAAdD,GAA8BK,KAAK,CAACE,MAAM,GAAG,CAAV,CAAnCP;QACAA,aAAa,CAACE,cAAdF,GAA+BK,KAAK,CAACE,MAAM,GAAG,CAAV,CAApCP;QACAA,aAAa,CAAChB,cAAdgB,GAA+BM,MAAM,CAACC,MAAM,GAAG,CAAV,CAArCP;QACAA,aAAa,CAACf,eAAde,GAAgCM,MAAM,CAACC,MAAM,GAAG,CAAV,CAAtCP;MACD,CALD,MAKO;QACL,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;UAC/B,IAAItB,CAAC,IAAImB,KAAK,CAACG,CAAD,CAAd,EAAmB;YACjBR,aAAa,CAACC,aAAdD,GAA8BK,KAAK,CAACG,CAAC,GAAG,CAAL,CAAnCR;YACAA,aAAa,CAACE,cAAdF,GAA+BK,KAAK,CAACG,CAAD,CAApCR;YACAA,aAAa,CAAChB,cAAdgB,GAA+BM,MAAM,CAACE,CAAC,GAAG,CAAL,CAArCR;YACAA,aAAa,CAACf,eAAde,GAAgCM,MAAM,CAACE,CAAD,CAAtCR;YACA;UACF;QACF;MACF;IACF;;IAEA,OAAOD,mBAAmB,CAACb,CAAD,EAAIc,aAAJ,EAAmBP,mBAAnB,CAA1B;EACF,CAzCA;;EAAA;IAAA,cAjJyB,YAiJzB;IAAA,qBAhFSD;EAgFT;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA","sourcesContent":["export enum Extrapolation {\n  IDENTITY = 'identity',\n  CLAMP = 'clamp',\n  EXTEND = 'extend',\n}\n\ninterface InterpolationNarrowedInput {\n  leftEdgeInput: number;\n  rightEdgeInput: number;\n  leftEdgeOutput: number;\n  rightEdgeOutput: number;\n}\n\nexport interface ExtrapolationConfig {\n  extrapolateLeft?: Extrapolation | string;\n  extrapolateRight?: Extrapolation | string;\n}\n\ninterface RequiredExtrapolationConfig {\n  extrapolateLeft: Extrapolation;\n  extrapolateRight: Extrapolation;\n}\n\nexport type ExtrapolationType =\n  | ExtrapolationConfig\n  | Extrapolation\n  | string\n  | undefined;\n\nfunction getVal(\n  type: Extrapolation,\n  coef: number,\n  val: number,\n  leftEdgeOutput: number,\n  rightEdgeOutput: number,\n  x: number\n): number {\n  'worklet';\n\n  switch (type) {\n    case Extrapolation.IDENTITY:\n      return x;\n    case Extrapolation.CLAMP:\n      if (coef * val < coef * leftEdgeOutput) {\n        return leftEdgeOutput;\n      }\n      return rightEdgeOutput;\n    case Extrapolation.EXTEND:\n    default:\n      return val;\n  }\n}\n\nfunction isExtrapolate(value: string): value is Extrapolation {\n  'worklet';\n\n  return (\n    value === Extrapolation.EXTEND ||\n    value === Extrapolation.CLAMP ||\n    value === Extrapolation.IDENTITY\n  );\n}\n\n// validates extrapolations type\n// if type is correct, converts it to ExtrapolationConfig\nfunction validateType(type: ExtrapolationType): RequiredExtrapolationConfig {\n  'worklet';\n  // initialize extrapolationConfig with default extrapolation\n  const extrapolationConfig: RequiredExtrapolationConfig = {\n    extrapolateLeft: Extrapolation.EXTEND,\n    extrapolateRight: Extrapolation.EXTEND,\n  };\n\n  if (!type) {\n    return extrapolationConfig;\n  }\n\n  if (typeof type === 'string') {\n    if (!isExtrapolate(type)) {\n      throw new Error(\n        `Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n        interpolate(value, [inputRange], [outputRange], \"clamp\")`\n      );\n    }\n    extrapolationConfig.extrapolateLeft = type;\n    extrapolationConfig.extrapolateRight = type;\n    return extrapolationConfig;\n  }\n\n  // otherwise type is extrapolation config object\n  if (\n    (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft)) ||\n    (type.extrapolateRight && !isExtrapolate(type.extrapolateRight))\n  ) {\n    throw new Error(\n      `Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n      interpolate(value, [inputRange], [outputRange], {\n        extrapolateLeft: Extrapolation.CLAMP,\n        extrapolateRight: Extrapolation.IDENTITY\n      }})`\n    );\n  }\n\n  Object.assign(extrapolationConfig, type);\n  return extrapolationConfig;\n}\n\nfunction internalInterpolate(\n  x: number,\n  narrowedInput: InterpolationNarrowedInput,\n  extrapolationConfig: RequiredExtrapolationConfig\n) {\n  'worklet';\n  const { leftEdgeInput, rightEdgeInput, leftEdgeOutput, rightEdgeOutput } =\n    narrowedInput;\n  if (rightEdgeInput - leftEdgeInput === 0) return leftEdgeOutput;\n  const progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\n  const val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\n  const coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\n\n  if (coef * val < coef * leftEdgeOutput) {\n    return getVal(\n      extrapolationConfig.extrapolateLeft,\n      coef,\n      val,\n      leftEdgeOutput,\n      rightEdgeOutput,\n      x\n    );\n  } else if (coef * val > coef * rightEdgeOutput) {\n    return getVal(\n      extrapolationConfig.extrapolateRight,\n      coef,\n      val,\n      leftEdgeOutput,\n      rightEdgeOutput,\n      x\n    );\n  }\n\n  return val;\n}\n\n// TODO: support default values in worklets:\n// e.g. function interpolate(x, input, output, type = Extrapolatation.CLAMP)\nexport function interpolate(\n  x: number,\n  input: readonly number[],\n  output: readonly number[],\n  type?: ExtrapolationType\n): number {\n  'worklet';\n  if (input.length < 2 || output.length < 2) {\n    throw Error(\n      'Interpolation input and output should contain at least two values.'\n    );\n  }\n\n  const extrapolationConfig = validateType(type);\n  const length = input.length;\n  const narrowedInput: InterpolationNarrowedInput = {\n    leftEdgeInput: input[0],\n    rightEdgeInput: input[1],\n    leftEdgeOutput: output[0],\n    rightEdgeOutput: output[1],\n  };\n  if (length > 2) {\n    if (x > input[length - 1]) {\n      narrowedInput.leftEdgeInput = input[length - 2];\n      narrowedInput.rightEdgeInput = input[length - 1];\n      narrowedInput.leftEdgeOutput = output[length - 2];\n      narrowedInput.rightEdgeOutput = output[length - 1];\n    } else {\n      for (let i = 1; i < length; ++i) {\n        if (x <= input[i]) {\n          narrowedInput.leftEdgeInput = input[i - 1];\n          narrowedInput.rightEdgeInput = input[i];\n          narrowedInput.leftEdgeOutput = output[i - 1];\n          narrowedInput.rightEdgeOutput = output[i];\n          break;\n        }\n      }\n    }\n  }\n\n  return internalInterpolate(x, narrowedInput, extrapolationConfig);\n}\n"]},"metadata":{},"sourceType":"module"}