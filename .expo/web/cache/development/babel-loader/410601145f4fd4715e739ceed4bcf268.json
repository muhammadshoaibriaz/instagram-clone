{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nimport { withTiming, withSpring } from \"../../animation\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder\";\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n\n  var _super = _createSuper(ComplexAnimationBuilder);\n\n  function ComplexAnimationBuilder() {\n    var _this;\n\n    _classCallCheck(this, ComplexAnimationBuilder);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"easingV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotateV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dampingV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"massV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"stiffnessV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"overshootClampingV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"restDisplacementThresholdV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"restSpeedThresholdV\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initialValues\", void 0);\n\n    return _this;\n  }\n\n  _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      this.initialValues = values;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n\n      if (type === withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n\n        if (duration) {\n          config.duration = duration;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n\n        if (mass) {\n          config.mass = mass;\n        }\n\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      var instance = this.createInstance();\n      return instance.withInitialValues(values);\n    }\n  }]);\n\n  return ComplexAnimationBuilder;\n}(BaseAnimationBuilder);\n\n_defineProperty(ComplexAnimationBuilder, \"createInstance\", void 0);","map":{"version":3,"sources":["ComplexAnimationBuilder.ts"],"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","constructor","easingFunction","instance","createInstance","easing","easingV","degree","rotate","rotateV","springify","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","values","withInitialValues","initialValues","getAnimationAndConfig","duration","durationV","animation","config","_defineProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB;AAOA,SAASC,oBAAT;AAGA,WAAaC,uBAAb;EAAA;;EAAA;;EAAkEC,mCAAAA;IAAAA;;IAAAA;;IAAAA,2BAAAA,SAAAA;;IAAAA,eAAAA,gCAAAA,SAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,SAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,MAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,UAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,OAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,YAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,oBAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,4BAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,qBAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA,eAAAA,gCAAAA,eAAAA,EAAAA,KAAAA,CAAAA,CAAAA;;IAAAA;EAAAA;;EAAlE;IAAA;IAAA,OAmBEI,gBAAOH,cAAPG,EAA0D;MACxD,KAAKC,OAAL,GAAeJ,cAAf;MACA,OAAO,IAAP;IACF;EAtBF;IAAA;IAAA,OA6BEM,gBAAOD,MAAPC,EAAgD;MAC9C,KAAKC,OAAL,GAAeF,MAAf;MACA,OAAO,IAAP;IACF;EAhCF;IAAA;IAAA,OAuCEG,qBAAqC;MACnC,KAAKC,IAAL,GAAYb,UAAZ;MACA,OAAO,IAAP;IACF;EA1CF;IAAA;IAAA,OAiDEc,iBAAQA,SAARA,EAAkD;MAChD,KAAKC,QAAL,GAAgBD,SAAhB;MACA,OAAO,IAAP;IACF;EApDF;IAAA;IAAA,OA2DEE,cAAKA,MAALA,EAA4C;MAC1C,KAAKC,KAAL,GAAaD,MAAb;MACA,OAAO,IAAP;IACF;EA9DF;IAAA;IAAA,OAqEEE,mBAAUA,WAAVA,EAAsD;MACpD,KAAKC,UAAL,GAAkBD,WAAlB;MACA,OAAO,IAAP;IACF;EAxEF;IAAA;IAAA,OA+EEE,2BAAkBA,mBAAlBA,EAAsE;MACpE,KAAKC,kBAAL,GAA0BD,mBAA1B;MACA,OAAO,IAAP;IACF;EAlFF;IAAA;IAAA,OA2FEE,mCACEA,2BADFA,EAE2B;MACzB,KAAKC,0BAAL,GAAkCD,2BAAlC;MACA,OAAO,IAAP;IACF;EAhGF;IAAA;IAAA,OAyGEE,4BAAmBA,oBAAnBA,EAAwE;MACtE,KAAKC,mBAAL,GAA2BD,oBAA3B;MACA,OAAO,IAAP;IACF;EA5GF;IAAA;IAAA,OAmHEG,2BAAkBD,MAAlBC,EAA4D;MAC1D,KAAKC,aAAL,GAAqBF,MAArB;MACA,OAAO,IAAP;IACF;EAtHF;IAAA;IAAA,OAwHEG,iCAAkD;MAChD,IAAMC,QAAQ,GAAG,KAAKC,SAAtB;MACA,IAAMxB,MAAM,GAAG,KAAKC,OAApB;MACA,IAAME,MAAM,GAAG,KAAKC,OAApB;MACA,IAAME,IAAI,GAAG,KAAKA,IAAL,GAAY,KAAKA,IAAjB,GAAyBd,UAAtC;MACA,IAAMe,OAAO,GAAG,KAAKC,QAArB;MACA,IAAMC,IAAI,GAAG,KAAKC,KAAlB;MACA,IAAMC,SAAS,GAAG,KAAKC,UAAvB;MACA,IAAMC,iBAAiB,GAAG,KAAKC,kBAA/B;MACA,IAAMC,yBAAyB,GAAG,KAAKC,0BAAvC;MACA,IAAMC,kBAAkB,GAAG,KAAKC,mBAAhC;MAEA,IAAMO,SAAS,GAAGnB,IAAlB;MAEA,IAAMoB,MAAkC,GAAG,EAA3C;;MAEA,IAAIpB,IAAI,KAAKd,UAAb,EAAyB;QACvB,IAAIQ,MAAJ,EAAY;UACV0B,MAAM,CAAC1B,MAAP0B,GAAgB1B,MAAhB0B;QACF;;QACA,IAAIH,QAAJ,EAAc;UACZG,MAAM,CAACH,QAAPG,GAAkBH,QAAlBG;QACF;;QACA,IAAIvB,MAAJ,EAAY;UACVuB,MAAM,CAACvB,MAAPuB,GAAgBvB,MAAhBuB;QACF;MACD,CAVD,MAUO;QACL,IAAInB,OAAJ,EAAa;UACXmB,MAAM,CAACnB,OAAPmB,GAAiBnB,OAAjBmB;QACF;;QACA,IAAIjB,IAAJ,EAAU;UACRiB,MAAM,CAACjB,IAAPiB,GAAcjB,IAAdiB;QACF;;QACA,IAAIf,SAAJ,EAAe;UACbe,MAAM,CAACf,SAAPe,GAAmBf,SAAnBe;QACF;;QACA,IAAIb,iBAAJ,EAAuB;UACrBa,MAAM,CAACb,iBAAPa,GAA2Bb,iBAA3Ba;QACF;;QACA,IAAIX,yBAAJ,EAA+B;UAC7BW,MAAM,CAACX,yBAAPW,GAAmCX,yBAAnCW;QACF;;QACA,IAAIT,kBAAJ,EAAwB;UACtBS,MAAM,CAACT,kBAAPS,GAA4BT,kBAA5BS;QACF;;QACA,IAAIvB,MAAJ,EAAY;UACVuB,MAAM,CAACvB,MAAPuB,GAAgBvB,MAAhBuB;QACF;MACF;;MACA,OAAO,CAACD,SAAD,EAAYC,MAAZ,CAAP;IACF;EA1KF;IAAA;IAAA,OAcE,gBAAc7B,cAAd,EAAiE;MAC/D,IAAMC,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACE,MAATF,CAAgBD,cAAhBC,CAAP;IACF;EAjBF;IAAA;IAAA,OAwBE,gBAAcI,MAAd,EAAuD;MACrD,IAAMJ,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACK,MAATL,CAAgBI,MAAhBJ,CAAP;IACF;EA3BF;IAAA;IAAA,OAkCE,qBAA4C;MAC1C,IAAMA,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACO,SAATP,EAAP;IACF;EArCF;IAAA;IAAA,OA4CE,iBAAeS,QAAf,EAAyD;MACvD,IAAMT,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACS,OAATT,CAAiBS,QAAjBT,CAAP;IACF;EA/CF;IAAA;IAAA,OAsDE,cAAYW,KAAZ,EAAmD;MACjD,IAAMX,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACW,IAATX,CAAcW,KAAdX,CAAP;IACF;EAzDF;IAAA;IAAA,OAgEE,mBAAiBa,UAAjB,EAA6D;MAC3D,IAAMb,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACa,SAATb,CAAmBa,UAAnBb,CAAP;IACF;EAnEF;IAAA;IAAA,OA0EE,2BAAyBe,kBAAzB,EAA6E;MAC3E,IAAMf,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACe,iBAATf,CAA2Be,kBAA3Bf,CAAP;IACF;EA7EF;IAAA;IAAA,OAoFE,mCACEiB,0BADF,EAE2B;MACzB,IAAMjB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACiB,yBAATjB,CAAmCiB,0BAAnCjB,CAAP;IACF;EAzFF;IAAA;IAAA,OAkGE,4BACEmB,mBADF,EAE2B;MACzB,IAAMnB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACmB,kBAATnB,CAA4BmB,mBAA5BnB,CAAP;IACF;EAvGF;IAAA;IAAA,OA8GE,2BAAyBqB,MAAzB,EAAmE;MACjE,IAAMrB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACsB,iBAATtB,CAA2BqB,MAA3BrB,CAAP;IACF;EAjHF;;EAAA;AAAA,EAA6CJ,oBAA7C;;AA2KCiC,eAAAA,CA3KYhC,uBA2KZgC,EA3KmC,gBA2KnCA,EA3KmC,KAAA,CA2KnCA,CAAAA","sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport {\n  AnimationFunction,\n  BaseBuilderAnimationConfig,\n  LayoutAnimationAndConfig,\n} from './commonTypes';\nimport { EasingFn } from '../../Easing';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nimport { StyleProps } from '../../commonTypes';\n\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  easingV?: EasingFn;\n  rotateV?: string;\n  type?: AnimationFunction;\n  dampingV?: number;\n  massV?: number;\n  stiffnessV?: number;\n  overshootClampingV?: number;\n  restDisplacementThresholdV?: number;\n  restSpeedThresholdV?: number;\n  initialValues?: StyleProps;\n\n  static createInstance: () => ComplexAnimationBuilder;\n\n  static easing(easingFunction: EasingFn): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n\n  easing(easingFunction: EasingFn): ComplexAnimationBuilder {\n    this.easingV = easingFunction;\n    return this;\n  }\n\n  static rotate(degree: string): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n\n  rotate(degree: string): ComplexAnimationBuilder {\n    this.rotateV = degree;\n    return this;\n  }\n\n  static springify(): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.springify();\n  }\n\n  springify(): ComplexAnimationBuilder {\n    this.type = withSpring as AnimationFunction;\n    return this;\n  }\n\n  static damping(damping: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n\n  damping(damping: number): ComplexAnimationBuilder {\n    this.dampingV = damping;\n    return this;\n  }\n\n  static mass(mass: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n\n  mass(mass: number): ComplexAnimationBuilder {\n    this.massV = mass;\n    return this;\n  }\n\n  static stiffness(stiffness: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n\n  stiffness(stiffness: number): ComplexAnimationBuilder {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n\n  static overshootClamping(overshootClamping: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n\n  overshootClamping(overshootClamping: number): ComplexAnimationBuilder {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n\n  static restDisplacementThreshold(\n    restDisplacementThreshold: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.restDisplacementThreshold(restDisplacementThreshold);\n  }\n\n  restDisplacementThreshold(\n    restDisplacementThreshold: number\n  ): ComplexAnimationBuilder {\n    this.restDisplacementThresholdV = restDisplacementThreshold;\n    return this;\n  }\n\n  static restSpeedThreshold(\n    restSpeedThreshold: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.restSpeedThreshold(restSpeedThreshold);\n  }\n\n  restSpeedThreshold(restSpeedThreshold: number): ComplexAnimationBuilder {\n    this.restSpeedThresholdV = restSpeedThreshold;\n    return this;\n  }\n\n  static withInitialValues(values: StyleProps): BaseAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n\n  withInitialValues(values: StyleProps): BaseAnimationBuilder {\n    this.initialValues = values;\n    return this;\n  }\n\n  getAnimationAndConfig(): LayoutAnimationAndConfig {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : (withTiming as AnimationFunction);\n    const damping = this.dampingV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const restDisplacementThreshold = this.restDisplacementThresholdV;\n    const restSpeedThreshold = this.restSpeedThresholdV;\n\n    const animation = type;\n\n    const config: BaseBuilderAnimationConfig = {};\n\n    if (type === withTiming) {\n      if (easing) {\n        config.easing = easing;\n      }\n      if (duration) {\n        config.duration = duration;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    } else {\n      if (damping) {\n        config.damping = damping;\n      }\n      if (mass) {\n        config.mass = mass;\n      }\n      if (stiffness) {\n        config.stiffness = stiffness;\n      }\n      if (overshootClamping) {\n        config.overshootClamping = overshootClamping;\n      }\n      if (restDisplacementThreshold) {\n        config.restDisplacementThreshold = restDisplacementThreshold;\n      }\n      if (restSpeedThreshold) {\n        config.restSpeedThreshold = restSpeedThreshold;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    }\n    return [animation, config];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}